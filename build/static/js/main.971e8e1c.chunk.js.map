{"version":3,"sources":["components/forms/LogIn.js","redux/actions.js","containers/forms/LogIn.js","components/modals/SearchResultsDetails.js","containers/modals/SearchResultsDetails.js","containers/UserSearchResults.js","components/UserSearchResults.js","components/cards/PerfectStrainDetailsCard.js","containers/cards/PerfectStrainDetailsCard.js","containers/modals/SnackbarAddFav.js","components/modals/SnackbarAddFav.js","components/modals/SnackbarAddPreLog.js","containers/forms/RecordPreLog.js","components/forms/RecordPreLog.js","components/cards/PerfectStrainDescriptionCard.js","containers/cards/PerfectStrainDescriptionCard.js","components/cards/PerfectStrainCards.js","containers/cards/PerfectStrainCards.js","components/Home.js","containers/Home.js","components/modals/FavsDetailsModal.js","containers/modals/FavsDetailsModal.js","components/cards/FavStrainsCards.js","containers/cards/FavStrainsCards.js","components/forms/SignUp.js","containers/forms/SignUp.js","containers/modals/ViewPreTokeModal.js","components/modals/ViewPreTokeModal.js","containers/forms/RecordReview.js","components/forms/RecordReview.js","containers/modals/ViewReviewModal.js","components/modals/ViewReviewModal.js","components/modals/ExpDetailsModal.js","containers/modals/ExpDetailsModal.js","components/cards/ExperienceCards.js","containers/cards/ExperienceCards.js","Router.js","redux/reducers.js","redux/store.js","redux/state.js","components/navigation/SearchBar.js","containers/navigation/SearchBar.js","components/navigation/Navigation.js","containers/navigation/Navigation.js","components/navigation/NavDrawer.js","containers/navigation/NavDrawer.js","components/forms/chips/PosEffectsChips.js","containers/cards/chips/PosEffectsChips.js","components/forms/chips/NegEffectsChips.js","containers/cards/chips/NegEffectsChips.js","components/forms/chips/MedicinalChips.js","containers/cards/chips/MedicinalChips.js","components/forms/chips/FlavorChips.js","containers/cards/chips/FlavorChips.js","components/forms/chips/SpeciesPrefsChips.js","containers/cards/chips/SpeciesPrefsChips.js","containers/modals/FindPerfectStrain.js","components/modals/FindPerfectStrain.js","components/modals/Loading.js","containers/modals/Loading.js","App.js","index.js"],"names":["Copyright","Typography","variant","color","align","to","Date","getFullYear","useStyles","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","info","main","form","width","marginTop","submit","options","LogIn","props","classes","React","useState","username","setUsername","password","setPassword","redirectHome","setRedirectHome","showDenyPopup","setDenyPopup","userObject","populatePreLogs","token","axios","get","headers","Authorization","then","response","addPreExps","data","populateReviews","addReviews","populateFavorites","addFavorites","login","e","a","preventDefault","post","res","setUser","storeToken","goHome","Grid","container","component","className","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","icon","faBong","size","onSubmit","TextField","required","onChange","target","value","fullWidth","id","name","label","autoComplete","autoFocus","FormControlLabel","control","Checkbox","Button","Box","mt","setPreTokeForm","input","addPreExp","exp","addReview","setTitle","toggleDrawer","toggleSnackbar","toggleFindPerfectStrain","toggleLoading","fetchAllStrains","dispatch","fetch","json","setPerfectStrainResults","results","fetchUserSearchResults","fetchEffects","fetchFlavors","fetchDescription","action","desc","setFavStrainObj","fav","addFavorite","arr","setUserSearchInput","setPosPrefs","setAvoidPrefs","setMedPrefs","setFlavPrefs","setSpeciesPrefs","connect","state","user","bearerToken","removeListing","exps","favs","populatePrefs","prefsObj","getModalStyle","top","left","transform","position","background","border","boxShadow","shadows","padding","userSearchResults","allStrains","searchParams","effects","flavors","posPrefs","avoidPrefs","medPrefs","flavPrefs","speciesPrefs","strainDescription","useEffect","sID","strain","find","s","positiveEffects","positive","negativeEffects","negative","medicalEffects","medical","modalStyle","open","setOpen","strainDisplayName","race","charAt","toUpperCase","slice","Modal","onClose","setModal","aria-labelledby","aria-describedby","style","textAlign","join","userSearchInput","showModal","strainID","setID","Container","maxWidth","Table","TableHead","TableRow","TableCell","TableBody","map","key","whiteSpace","cursor","onClick","currentTarget","handleModal","flexGrow","perfectStrainResults","setDetailsModal","strainRace","strainName","snackbarOpen","title","handleClose","event","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","Fragment","textDecoration","IconButton","aria-label","fontSize","SnackbarAddPreLog","showSnackbar","preTokeForm","experiences","toggleOpen","toggleDialog","currentdate","getMonth","getDate","getHours","getMinutes","getSeconds","Object","entries","clearAll","sessionPurpose","preMood","expectToAchieve","lingeringWorries","goal","alreadyDone","todo","handleTextChange","x","newState","AddExpToolTip","withStyles","tooltip","typography","pxToRem","Tooltip","placement","TransitionComponent","Zoom","faUserAstronaut","Dialog","DialogTitle","DialogContent","preLog","strainId","strainSpecies","preWhen","toLocaleDateString","paddingBottom","FormControl","InputLabel","Select","labelId","MenuItem","placeholder","multiline","setDescriptionModal","marginRight","heroContent","heroButtons","cardGrid","paddingTop","card","cardMedia","cardContent","footer","minHeight","tooManyResults","noResults","BioToolTip","favorites","isLoading","favStrainObj","showDetailsModal","showDescriptionModal","handleDescriptionModal","length","Card","CardMedia","CardContent","CardActions","handleDetailsModal","fontWeight","textShadow","disableRipple","existingFav","handleAddFav","String","gutterBottom","paragraph","justify","removeFavorite","setStrainRace","setStrainName","FavsDetailsModal","delete","faHeartBroken","secondary","SignUp","profile","setProfile","userCredsObject","email","firstName","lastName","city","checkUser","addUser","method","body","JSON","stringify","preLogs","pre","setViewPreTokeModal","reviewForm","reviews","setReviewForm","prelog","handleSubmit","review","session_id","budDescript","goodFor","transformedMood","transformedExpectations","experience","transformedWorries","transformedGoals","setAddReviewForm","setViewReviewModal","cardStrainName","showViewPreTokeModal","showAddReviewForm","showViewReviewModal","m","faInfoCircle","handlePreLogModal","handleOpenReview","Router","exact","path","Home","UserSearchResults","FavStrainsCards","Experience","combineReducers","drawerOpen","findPerfectStrainModalOpen","filter","flat","assign","newPreExpState","newReviewState","userPrefsObj","createStore","reducers","disappointments","wouldChangeNextTime","wouldRecommend","applyMiddleware","thunk","grow","menuButton","breakpoints","up","search","borderRadius","shape","fade","common","white","marginLeft","searchIcon","pointerEvents","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","redirect","setRedirect","InputBase","inputProps","handleChange","signUp","Navigation","location","useLocation","SignIn","SignOut","document","cookie","window","replace","AppBar","Toolbar","edge","faCannabis","pathname","list","fullList","findPerfectStrainOpen","toggle","handleRedirect","link","Drawer","anchor","role","onKeyDown","List","ListItem","button","ListItemIcon","ListItemText","primary","Divider","formControl","minWidth","wrap","chips","flexWrap","chip","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","posEffects","getStyles","pref","indexOf","fontWeightRegular","fontWeightMedium","useTheme","multiple","Input","renderValue","selected","Chip","sort","effect","negEffects","medicinal","flavorPref","flavor","species","resetAllStrains","getPerfectStrains","perfectStrains","every","includes","disableEscapeKeyDown","DialogActions","backdrop","zIndex","drawer","Backdrop","CircularProgress","createMuiTheme","orange","fontFamily","App","store","ThemeProvider","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.971e8e1c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  CssBaseline,\r\n  TextField,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Paper,\r\n  Box,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport { faBong, faBan } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link to=\"/\" color=\"inherit\">\r\n        Higher Intentions\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage: \"url(./../smoking_the_butterflies.jpg)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    color: \"white\",\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.info.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  options: {\r\n    color: \"azure\",\r\n    backgroundColor: theme.palette.info.main,\r\n  },\r\n}));\r\n\r\nconst LogIn = (props) => {\r\n  const classes = useStyles();\r\n  const [username, setUsername] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [redirectHome, setRedirectHome] = React.useState(false);\r\n  const [showDenyPopup, setDenyPopup] = React.useState(false);\r\n\r\n  const handleUsernameChange = (e) => {\r\n    setUsername(e.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const userObject = {\r\n    username: username,\r\n    password: password,\r\n  };\r\n\r\n  const populatePreLogs = (token) => {\r\n    return axios\r\n      .get(`/prelogs/${username}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        props.addPreExps(response.data);\r\n      });\r\n  };\r\n\r\n  const populateReviews = (token) => {\r\n    return axios\r\n      .get(`/reviews/${username}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        props.addReviews(response.data);\r\n      });\r\n  };\r\n\r\n  const populateFavorites = (token) => {\r\n    return axios\r\n      .get(`/favorites/${username}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        props.addFavorites(response.data);\r\n      });\r\n  };\r\n\r\n  const login = async (e) => {\r\n    e.preventDefault();\r\n    setPassword(\"\");\r\n    setUsername(\"\");\r\n    setDenyPopup(true);\r\n    await axios.post(\"/auth/login\", userObject).then((res) => {\r\n      let token = res.data.token;\r\n      props.setUser(username);\r\n      populatePreLogs(token);\r\n      populateReviews(token);\r\n      populateFavorites(token);\r\n      props.storeToken(token);\r\n    });\r\n    goHome();\r\n  };\r\n\r\n  const goHome = () => {\r\n    setRedirectHome(true);\r\n  };\r\n\r\n  if (redirectHome) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          {showDenyPopup ? (\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n          ) : (\r\n            <Avatar className={classes.avatar}>\r\n              <FontAwesomeIcon icon={faBong} size=\"3x\" className=\"avatar\" />\r\n            </Avatar>\r\n          )}\r\n\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign In\r\n          </Typography>\r\n          {/* {showDenyPopup && (\r\n            <p style={{ color: \"orange\" }}>User and/or Password incorrect.</p>\r\n          )} */}\r\n          <form className={classes.form} onSubmit={login}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              onChange={handleUsernameChange}\r\n              value={username}\r\n              fullWidth\r\n              id=\"username\"\r\n              name=\"username\"\r\n              label=\"Username\"\r\n              type=\"text\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              onChange={handlePasswordChange}\r\n              value={password}\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link to=\"/\" variant=\"body2\">\r\n                  {\"Continue As Guest\"}\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link to=\"signup\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default LogIn;\r\n","export const setUser = (username) => {\r\n  return {\r\n    type: \"USER\",\r\n    value: username,\r\n  };\r\n};\r\n\r\nexport const setPreTokeForm = (input) => {\r\n  return {\r\n    type: \"SET_PRE_TOKE\",\r\n    value: input,\r\n  };\r\n};\r\n\r\nexport const setReviewForm = (input) => {\r\n  return {\r\n    type: \"SET_REVIEW\",\r\n    value: input,\r\n  };\r\n};\r\n\r\nexport const setProfile = (input) => {\r\n  return {\r\n    type: \"SET_PROFILE\",\r\n    value: input,\r\n  };\r\n};\r\n\r\nexport const addPreExp = (exp) => {\r\n  return {\r\n    type: \"ADD_PRE_EXP\",\r\n    value: exp,\r\n  };\r\n};\r\n\r\nexport const addPreExps = (exps) => {\r\n  return {\r\n    type: \"ADD_PRE_EXPS\",\r\n    value: exps,\r\n  };\r\n};\r\n\r\nexport const addReview = (exp) => {\r\n  return {\r\n    type: \"ADD_REVIEW\",\r\n    value: exp,\r\n  };\r\n};\r\n\r\nexport const addReviews = (exps) => {\r\n  return {\r\n    type: \"ADD_REVIEWS\",\r\n    value: exps,\r\n  };\r\n};\r\n\r\nexport const setTitle = (input) => {\r\n  return {\r\n    type: \"SET_TITLE\",\r\n    value: input,\r\n  };\r\n};\r\n\r\nexport const toggleDrawer = (input) => {\r\n  return {\r\n    type: \"DRAWER_OPEN\",\r\n    value: input,\r\n  };\r\n};\r\n\r\nexport const toggleSnackbar = (input) => {\r\n  return {\r\n    type: \"SNACKBAR_OPEN\",\r\n    value: input,\r\n  };\r\n};\r\n\r\nexport const toggleFindPerfectStrain = (input) => {\r\n  return {\r\n    type: \"FIND_PERFECT_STRAIN_MODAL_OPEN\",\r\n    value: input,\r\n  };\r\n};\r\n\r\nexport const toggleLoading = (input) => {\r\n  return {\r\n    type: \"IS_LOADING\",\r\n    value: input,\r\n  };\r\n};\r\n\r\nexport const fetchAllStrains = () => {\r\n  return async (dispatch) => {\r\n    await fetch(`https://strainapi.evanbusse.com/jXftQqp/strains/search/all`)\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        const action = {\r\n          type: \"ALL_STRAINS\",\r\n          value: response,\r\n        };\r\n        dispatch(action);\r\n      });\r\n  };\r\n};\r\n\r\nexport const setPerfectStrainResults = (results) => {\r\n  return {\r\n    type: \"SET_PERFECT_STRAIN_RESULTS\",\r\n    value: results,\r\n  };\r\n};\r\n\r\nexport const fetchUserSearchResults = (input) => {\r\n  return async (dispatch) => {\r\n    await fetch(\r\n      `https://strainapi.evanbusse.com/jXftQqp/strains/search/name/${input}`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        const action = {\r\n          type: \"USER_SEARCH_RESULTS\",\r\n          value: response,\r\n        };\r\n        dispatch(action);\r\n      });\r\n  };\r\n};\r\n\r\nexport const storeToken = (input) => {\r\n  return {\r\n    type: \"BEARER_TOKEN\",\r\n    value: input,\r\n  };\r\n};\r\n\r\n// export const storeToken = (input) => {\r\n//   return async (dispatch) => {\r\n//     await fetch(\"/auth/login\", {\r\n//       method: \"POST\",\r\n//       body: JSON.stringify(input),\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//       },\r\n//     })\r\n//       .then((res) => res.json())\r\n//       .then((response) => {\r\n//         const action = {\r\n//           type: \"BEARER_TOKEN\",\r\n//           value: response.token,\r\n//         };\r\n//         dispatch(action);\r\n//       });\r\n//   };\r\n// };\r\n\r\nexport const addUser = (input) => {\r\n  return async (dispatch) => {\r\n    await fetch(\"/auth/signup\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(input),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        const action = {\r\n          type: \"AUTH_LOGIN\",\r\n          value: response,\r\n        };\r\n        dispatch(action);\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchEffects = (input) => {\r\n  return async (dispatch) => {\r\n    await fetch(\r\n      `https://strainapi.evanbusse.com/jXftQqp/strains/data/effects/${input}`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        const action = {\r\n          type: \"EFFECTS\",\r\n          value: response,\r\n        };\r\n        dispatch(action);\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchFlavors = (input) => {\r\n  return async (dispatch) => {\r\n    await fetch(\r\n      `https://strainapi.evanbusse.com/jXftQqp/strains/data/flavors/${input}`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        const action = {\r\n          type: \"FLAVORS\",\r\n          value: response,\r\n        };\r\n        dispatch(action);\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchDescription = (input) => {\r\n  return async (dispatch) => {\r\n    await fetch(\r\n      `https://strainapi.evanbusse.com/jXftQqp/strains/data/desc/${input}`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        const action = {\r\n          type: \"STRAIN_DESCRIPTION\",\r\n          value: response.desc,\r\n        };\r\n        dispatch(action);\r\n      });\r\n  };\r\n};\r\n\r\nexport const setUserPrefsObj = (prefsObj) => {\r\n  return {\r\n    type: \"SET_USER_PREFS\",\r\n    value: prefsObj,\r\n  };\r\n};\r\n\r\nexport const populatePrefs = (prefsObj) => {\r\n  return {\r\n    type: \"POPULATE_USER_PREFS\",\r\n    value: prefsObj,\r\n  };\r\n};\r\n\r\nexport const setFavStrainObj = (fav) => {\r\n  return {\r\n    type: \"SET_FAV\",\r\n    value: fav,\r\n  };\r\n};\r\n\r\nexport const addFavorite = (fav) => {\r\n  return {\r\n    type: \"ADD_FAVORITE\",\r\n    value: fav,\r\n  };\r\n};\r\n\r\nexport const removeFavorite = (id) => {\r\n  return {\r\n    type: \"REMOVE_FAVORITE\",\r\n    value: id,\r\n  };\r\n};\r\n\r\nexport const addFavorites = (arr) => {\r\n  return {\r\n    type: \"ADD_FAVORITES\",\r\n    value: arr,\r\n  };\r\n};\r\n\r\nexport const removeListing = (id) => {\r\n  return {\r\n    type: \"REMOVE_LISTING\",\r\n    value: id,\r\n  };\r\n};\r\n\r\nexport const setSearchParams = (searchParams) => {\r\n  return {\r\n    type: \"SEARCH_PARAMS\",\r\n    value: searchParams,\r\n  };\r\n};\r\n\r\nexport const setUserSearchInput = (input) => {\r\n  return {\r\n    type: \"USER_INPUT\",\r\n    value: input,\r\n  };\r\n};\r\n\r\nexport const setPosPrefs = (input) => {\r\n  return {\r\n    type: \"POS_PREFS\",\r\n    value: input,\r\n  };\r\n};\r\n\r\nexport const setAvoidPrefs = (input) => {\r\n  return {\r\n    type: \"AVOID_PREFS\",\r\n    value: input,\r\n  };\r\n};\r\n\r\nexport const setMedPrefs = (input) => {\r\n  return {\r\n    type: \"MED_PREFS\",\r\n    value: input,\r\n  };\r\n};\r\n\r\nexport const setFlavPrefs = (input) => {\r\n  return {\r\n    type: \"FLAV_PREFS\",\r\n    value: input,\r\n  };\r\n};\r\n\r\nexport const setSpeciesPrefs = (input) => {\r\n  return {\r\n    type: \"SPECIES_PREFS\",\r\n    value: input,\r\n  };\r\n};\r\n\r\nexport const resetAllStrains = (input) => {\r\n  return {\r\n    type: \"RESET_RESULTS\",\r\n    value: input,\r\n  };\r\n};\r\n","import { connect } from \"react-redux\";\r\nimport LogIn from \"../../components/forms/LogIn\";\r\nimport {\r\n  removeListing,\r\n  setUser,\r\n  storeToken,\r\n  addPreExp,\r\n  addPreExps,\r\n  addReview,\r\n  addReviews,\r\n  addFavorites,\r\n  populatePrefs,\r\n  setAvoidPrefs,\r\n  setMedPrefs,\r\n  setFlavPrefs,\r\n  setPosPrefs,\r\n  setSpeciesPrefs,\r\n} from \"../../redux/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    bearerToken: state.bearerToken,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    removeListing: (id) => dispatch(removeListing(id)),\r\n    setUser: (username) => dispatch(setUser(username)),\r\n    storeToken: (input) => dispatch(storeToken(input)),\r\n    addPreExp: (exp) => dispatch(addPreExp(exp)),\r\n    addPreExps: (exps) => dispatch(addPreExps(exps)),\r\n    addReview: (exp) => dispatch(addReview(exp)),\r\n    addReviews: (exps) => dispatch(addReviews(exps)),\r\n    addFavorites: (favs) => dispatch(addFavorites(favs)),\r\n    populatePrefs: (prefsObj) => dispatch(populatePrefs(prefsObj)),\r\n    setAvoidPrefs: (input) => dispatch(setAvoidPrefs(input)),\r\n    setPosPrefs: (input) => dispatch(setPosPrefs(input)),\r\n    setMedPrefs: (input) => dispatch(setMedPrefs(input)),\r\n    setFlavPrefs: (input) => dispatch(setFlavPrefs(input)),\r\n    setSpeciesPrefs: (input) => dispatch(setSpeciesPrefs(input)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LogIn);\r\n","import React from \"react\";\r\n// import { Container, Box, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nexport default function SearchResultsDetails(props) {\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(() => {\r\n    props.fetchEffects(props.sID);\r\n    props.fetchFlavors(props.sID);\r\n    props.fetchDescription(props.sID);\r\n  }, []);\r\n\r\n  const strain = props.userSearchResults.find((s) => s.id == props.sID);\r\n  // const secondStrain = Object.entries(props.allStrains).find(s => s[1].id == props.id)\r\n  const positiveEffects = props.effects.positive;\r\n  const negativeEffects = props.effects.negative;\r\n  const medicalEffects = props.effects.medical;\r\n  const flavors = props.flavors;\r\n\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  // const handleOpen = () => {\r\n  //   setOpen(true);\r\n  // };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    props.setModal(false);\r\n  };\r\n\r\n  const strainDisplayName =\r\n    strain.race.charAt(0).toUpperCase() + strain.race.slice(1);\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={() => handleClose()}\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n    >\r\n      <div style={modalStyle} className={classes.paper}>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12}>\r\n            <h1 style={{ color: \"springgreen\", textAlign: \"center\" }}>\r\n              {strain.name}{\" \"}\r\n              {\r\n                <div\r\n                  style={{\r\n                    color:\r\n                      strain.race === \"sativa\"\r\n                        ? \"orange\"\r\n                        : strain.race === \"indica\"\r\n                        ? \"orchid\"\r\n                        : \"indianred\",\r\n                  }}\r\n                >\r\n                  {strainDisplayName}\r\n                </div>\r\n              }\r\n            </h1>\r\n            <hr />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <h2>\r\n              Positive Effects: {\"\"}\r\n              <span style={{ color: \"springgreen\" }}>\r\n                {positiveEffects.join(\", \")}\r\n              </span>\r\n            </h2>\r\n            <h2>\r\n              Negative Effects:{\" \"}\r\n              <span style={{ color: \"red\" }}>{negativeEffects.join(\", \")}</span>\r\n            </h2>\r\n            <h2 style={{ color: \"\" }}>\r\n              Helps to treat: {\"\"}\r\n              <span style={{ color: \"cornflowerblue\" }}>\r\n                {medicalEffects.join(\", \")}\r\n              </span>\r\n            </h2>\r\n            <h2 style={{ color: \"\" }}>\r\n              Flavors: {\"\"}\r\n              <span style={{ color: \"orange\" }}>{flavors.join(\", \")}</span>\r\n            </h2>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"body1\" style={{ color: \"lightgray\" }}>\r\n              {props.strainDescription}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport SearchResultsDetails from \"../../components/modals/SearchResultsDetails\";\r\nimport {\r\n  setUser,\r\n  fetchAllStrains,\r\n  fetchUserSearchResults,\r\n  fetchEffects,\r\n  fetchFlavors,\r\n  fetchDescription,\r\n} from \"../../redux/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    userSearchResults: state.userSearchResults,\r\n    allStrains: state.allStrains,\r\n    searchParams: state.searchParams,\r\n    effects: state.effects,\r\n    flavors: state.flavors,\r\n    posPrefs: state.posPrefs,\r\n    avoidPrefs: state.avoidPrefs,\r\n    medPrefs: state.medPrefs,\r\n    flavPrefs: state.flavPrefs,\r\n    speciesPrefs: state.speciesPrefs,\r\n    strainDescription: state.strainDescription,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setUser: (username) => dispatch(setUser(username)),\r\n    fetchAllStrains: () => dispatch(fetchAllStrains()),\r\n    fetchUserSearchResults: (input) => dispatch(fetchUserSearchResults(input)),\r\n    fetchEffects: (input) => dispatch(fetchEffects(input)),\r\n    fetchFlavors: (input) => dispatch(fetchFlavors(input)),\r\n    fetchDescription: (input) => dispatch(fetchDescription(input)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SearchResultsDetails);\r\n","import { connect } from \"react-redux\";\r\nimport DisplayUserSearchResults from \"../components/UserSearchResults\";\r\nimport {\r\n  setUser,\r\n  fetchAllStrains,\r\n  fetchUserSearchResults,\r\n  setSpeciesPrefs,\r\n  fetchDescription,\r\n  fetchEffects,\r\n  fetchFlavors,\r\n  setUserSearchInput,\r\n} from \"../redux/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    userSearchResults: state.userSearchResults,\r\n    allStrains: state.allStrains,\r\n    searchParams: state.searchParams,\r\n    userSearchInput: state.userSearchInput,\r\n    effects: state.effects,\r\n    posPrefs: state.posPrefs,\r\n    avoidPrefs: state.avoidPrefs,\r\n    medPrefs: state.medPrefs,\r\n    flavPrefs: state.flavPrefs,\r\n    speciesPrefs: state.speciesPrefs,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setUser: (username) => dispatch(setUser(username)),\r\n    fetchAllStrains: () => dispatch(fetchAllStrains()),\r\n    fetchUserSearchResults: (input) => dispatch(fetchUserSearchResults(input)),\r\n    setUserSearchInput: (input) => dispatch(setUserSearchInput(input)),\r\n    setSpeciesPrefs: (input) => dispatch(setSpeciesPrefs(input)),\r\n    fetchDescription: (input) => dispatch(fetchDescription(input)),\r\n    fetchEffects: (input) => dispatch(fetchEffects(input)),\r\n    fetchFlavors: (input) => dispatch(fetchFlavors(input)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DisplayUserSearchResults);\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n// import cookie from \"cookie\";\r\nimport {\r\n  Container,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SearchResultsDetails from \"../containers/modals/SearchResultsDetails\";\r\n\r\nexport default function DisplayUserSearchResults(props) {\r\n  const [showModal, setModal] = React.useState(false);\r\n  const [strainID, setID] = React.useState(null);\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      \"& > *\": {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleModal = (e) => {\r\n    setID(e.currentTarget.id);\r\n    setModal(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {showModal && <SearchResultsDetails setModal={setModal} sID={strainID} />}\r\n      <Container maxWidth=\"lg\">\r\n        <Typography>\r\n          <h2>Strains</h2>\r\n        </Typography>\r\n        <div className={classes.root}></div>\r\n        <Table className=\"listings\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <Typography>Name</Typography>\r\n              </TableCell>\r\n              <TableCell>\r\n                <Typography>Description</Typography>\r\n              </TableCell>\r\n              <TableCell />\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {props.userSearchResults.map((strain) => (\r\n              <TableRow key={strain.id}>\r\n                <TableCell>\r\n                  <Typography\r\n                    style={{\r\n                      whiteSpace: \"nowrap\",\r\n                      cursor: \"pointer\",\r\n                      color: \"springgreen\",\r\n                    }}\r\n                    id={strain.id}\r\n                    onClick={(e) => handleModal(e)}\r\n                    variant=\"body1\"\r\n                  >\r\n                    {strain.name}\r\n                  </Typography>\r\n                  <br />\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    style={{\r\n                      color:\r\n                        strain.race === \"sativa\"\r\n                          ? \"gold\"\r\n                          : strain.race === \"indica\"\r\n                          ? \"orchid\"\r\n                          : \"indianred\",\r\n                    }}\r\n                  >\r\n                    {strain.race}\r\n                  </Typography>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Typography variant=\"body1\" style={{ color: \"#BDB76B\" }}>\r\n                    {strain.desc}\r\n                  </Typography>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Modal, Grid, Typography } from \"@material-ui/core\";\r\n\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    color: \"lightgray\",\r\n    position: \"absolute\",\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function PerfectStrainDetailsCard(props) {\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(() => {\r\n    props.fetchEffects(props.sID);\r\n    props.fetchFlavors(props.sID);\r\n  }, []);\r\n\r\n  const strain = props.perfectStrainResults.find((s) => s[1].id == props.sID);\r\n  const positiveEffects = props.effects.positive;\r\n  const negativeEffects = props.effects.negative;\r\n  const medicalEffects = props.effects.medical;\r\n  const flavors = props.flavors;\r\n\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  // const handleOpen = () => {\r\n  //   setOpen(true);\r\n  // };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    props.setDetailsModal(false);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={() => handleClose()}\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n    >\r\n      <div style={modalStyle} className={classes.paper}>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12}>\r\n            <Typography>\r\n              <div style={{ textAlign: \"center\" }}>\r\n                <h1\r\n                  style={{\r\n                    color:\r\n                      props.strainRace === \"sativa\"\r\n                        ? \"gold\"\r\n                        : props.strainRace === \"indica\"\r\n                        ? \"orchid\"\r\n                        : \"indianred\",\r\n                  }}\r\n                >\r\n                  {props.strainName || strain[0]}\r\n                  <br />\r\n                  <span style={{ color: \"lightgray\" }}>Details</span>\r\n                </h1>\r\n              </div>\r\n            </Typography>\r\n            <hr />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography>\r\n              <h2>\r\n                Positive Effects: {\"\"}\r\n                <span style={{ color: \"springgreen\" }}>\r\n                  {positiveEffects.join(\", \")}\r\n                </span>\r\n              </h2>\r\n              <h2>\r\n                Negative Effects:{\" \"}\r\n                <span style={{ color: \"red\" }}>\r\n                  {negativeEffects.join(\", \")}\r\n                </span>\r\n              </h2>\r\n              <h2 style={{ color: \"\" }}>\r\n                Helps to treat: {\"\"}\r\n                <span style={{ color: \"cornflowerblue\" }}>\r\n                  {medicalEffects.join(\", \")}\r\n                </span>\r\n              </h2>\r\n              <h2 style={{ color: \"\" }}>\r\n                Flavors: {\"\"}\r\n                <span style={{ color: \"orange\" }}>{flavors.join(\", \")}</span>\r\n              </h2>\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport PerfectStrainDetailsCard from \"../../components/cards/PerfectStrainDetailsCard\";\r\nimport {\r\n  setUser,\r\n  fetchAllStrains,\r\n  fetchUserSearchResults,\r\n  fetchEffects,\r\n  fetchFlavors,\r\n  fetchDescription,\r\n} from \"../../redux/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    userSearchResults: state.userSearchResults,\r\n    allStrains: state.allStrains,\r\n    searchParams: state.searchParams,\r\n    effects: state.effects,\r\n    flavors: state.flavors,\r\n    posPrefs: state.posPrefs,\r\n    avoidPrefs: state.avoidPrefs,\r\n    medPrefs: state.medPrefs,\r\n    flavPrefs: state.flavPrefs,\r\n    speciesPrefs: state.speciesPrefs,\r\n    strainDescription: state.strainDescription,\r\n    perfectStrainResults: state.perfectStrainResults,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setUser: (username) => dispatch(setUser(username)),\r\n    fetchAllStrains: () => dispatch(fetchAllStrains()),\r\n    fetchUserSearchResults: (input) => dispatch(fetchUserSearchResults(input)),\r\n    fetchEffects: (input) => dispatch(fetchEffects(input)),\r\n    fetchFlavors: (input) => dispatch(fetchFlavors(input)),\r\n    fetchDescription: (input) => dispatch(fetchDescription(input)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PerfectStrainDetailsCard);\r\n","import { connect } from \"react-redux\";\r\nimport SnackbarAddFav from \"../../components/modals/SnackbarAddFav\";\r\nimport { toggleSnackbar } from \"../../redux/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    allStrains: state.allStrains,\r\n    snackbarOpen: state.snackbarOpen,\r\n    perfectStrainResults: state.perfectStrainResults,\r\n    title: state.title,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    toggleSnackbar: (input) => dispatch(toggleSnackbar(input)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SnackbarAddFav);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Snackbar, IconButton, Typography } from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nexport default function SnackbarAddFav(props) {\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    props.toggleSnackbar(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        open={props.snackbarOpen}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        message={\r\n          <Typography>\r\n            <span style={{ color: \"purple\" }}>{props.title}</span> Added to\r\n            Favorites\r\n          </Typography>\r\n        }\r\n        action={\r\n          <React.Fragment>\r\n            <Link to=\"/favorites\" style={{ textDecoration: \"none\" }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                size=\"small\"\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                Go To Favs\r\n              </Button>\r\n            </Link>\r\n            <IconButton\r\n              size=\"small\"\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n            >\r\n              <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport default function SnackbarAddPreLog(props) {\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    props.toggleSnackbar(false);\r\n  };\r\n\r\n  // let strain = props.perfectStrainResults.find((s) => s[1].id == props.sID);\r\n\r\n  return (\r\n    <div>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        open={props.showSnackbar}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        message={\r\n          <Typography>\r\n            <span style={{ color: \"purple\" }}>{props.strainName}</span> Added To\r\n            Experience\r\n          </Typography>\r\n        }\r\n        action={\r\n          <React.Fragment>\r\n            <Link to=\"/experience\" style={{ textDecoration: \"none\" }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                Go To Exp\r\n              </Button>\r\n            </Link>\r\n            <IconButton\r\n              size=\"small\"\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n            >\r\n              <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport RecordPreLog from \"../../components/forms/RecordPreLog\";\r\nimport {\r\n  addPreExp,\r\n  setPreTokeForm,\r\n  fetchAllStrains,\r\n} from \"../../redux/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    bearerToken: state.bearerToken,\r\n    preTokeForm: state.preTokeForm,\r\n    experiences: state.experiences,\r\n    perfectStrainResults: state.perfectStrainResults,\r\n    allStrains: state.allStrains,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPreExp: (exp) => dispatch(addPreExp(exp)),\r\n    setPreTokeForm: (input) => dispatch(setPreTokeForm(input)),\r\n    fetchAllStrains: (input) => dispatch(fetchAllStrains(input)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RecordPreLog);\r\n","import React, { Fragment } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  InputLabel,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  Tooltip,\r\n  Zoom,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { faUserAstronaut } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport SnackbarAddPreLog from \"../modals/SnackbarAddPreLog\";\r\n\r\nexport default function RecordPreLog(props) {\r\n  const [open, toggleOpen] = React.useState(false);\r\n  const [showSnackbar, toggleSnackbar] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    props.fetchAllStrains();\r\n  }, []);\r\n\r\n  const toggleDialog = () => {\r\n    toggleOpen(!open);\r\n  };\r\n\r\n  var currentdate = new Date();\r\n  var datetime =\r\n    currentdate.getMonth() +\r\n    1 +\r\n    \"/\" +\r\n    currentdate.getDate() +\r\n    \"/\" +\r\n    currentdate.getFullYear() +\r\n    \" @ \" +\r\n    currentdate.getHours() +\r\n    \":\" +\r\n    currentdate.getMinutes() +\r\n    \":\" +\r\n    currentdate.getSeconds();\r\n\r\n  const strain = Object.entries(props.allStrains).find(\r\n    (s) => s[1].id == props.id\r\n  );\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const preLog = props.preTokeForm;\r\n    preLog.strainId = props.strainId || strain[1].id;\r\n    preLog.strainName = props.strainName;\r\n    preLog.strainSpecies = props.strainSpecies || strain[1].race;\r\n    preLog.preWhen = currentdate.toLocaleDateString();\r\n    preLog.username = props.user;\r\n    props.addPreExp(preLog);\r\n    axios.post(\"/prelogs\", preLog, {\r\n      headers: {\r\n        Authorization: `Bearer ${props.bearerToken}`,\r\n      },\r\n    });\r\n    toggleOpen(false);\r\n    clearAll();\r\n    toggleSnackbar(true);\r\n  };\r\n\r\n  const clearAll = () => {\r\n    props.setPreTokeForm({\r\n      sessionPurpose: \"\",\r\n      preMood: \"\",\r\n      expectToAchieve: \"\",\r\n      lingeringWorries: \"\",\r\n      goal: \"\",\r\n      alreadyDone: \"\",\r\n      todo: \"\",\r\n    });\r\n  };\r\n\r\n  const handleTextChange = (e, x) => {\r\n    const newState = props.preTokeForm;\r\n    newState[e.target.id] = e.target.value;\r\n    newState[x] = e.target.value;\r\n    props.setPreTokeForm(newState);\r\n  };\r\n\r\n  const AddExpToolTip = withStyles((theme) => ({\r\n    tooltip: {\r\n      backgroundColor: \"#424242\",\r\n      color: \"orange\",\r\n      maxWidth: 220,\r\n      fontSize: theme.typography.pxToRem(12),\r\n      border: \"1px solid #dadde9\",\r\n    },\r\n  }))(Tooltip);\r\n\r\n  return (\r\n    <Fragment>\r\n      <SnackbarAddPreLog\r\n        toggleSnackbar={toggleSnackbar}\r\n        showSnackbar={showSnackbar}\r\n        strainName={props.strainName}\r\n      />\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <AddExpToolTip\r\n          title={\r\n            <React.Fragment>\r\n              <Typography>Add Exp</Typography>\r\n            </React.Fragment>\r\n          }\r\n          placement=\"top\"\r\n          TransitionComponent={Zoom}\r\n        >\r\n          <Typography\r\n            className=\"add-exp\"\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={toggleDialog}\r\n          >\r\n            <FontAwesomeIcon\r\n              icon={faUserAstronaut}\r\n              size=\"5x\"\r\n              className=\"bong-icon\"\r\n            />\r\n          </Typography>\r\n        </AddExpToolTip>\r\n      </div>\r\n      <div>\r\n        <Typography>\r\n          <Dialog open={open} onClose={toggleDialog}>\r\n            <DialogTitle>\r\n              <Typography variant=\"h5\">\r\n                Before You Experience{\" \"}\r\n                {\r\n                  <span style={{ color: \"springgreen\" }}>\r\n                    {props.strainName}\r\n                  </span>\r\n                }\r\n              </Typography>\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <form\r\n                onSubmit={handleSubmit}\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  width: \"350px\",\r\n                }}\r\n              >\r\n                <div style={{ paddingBottom: 10 }}>\r\n                  While I'm feeling{\" \"}\r\n                  <span style={{ color: \"orange\" }}>\r\n                    {props.preTokeForm.preMood}\r\n                  </span>\r\n                  , I'm hoping to achieve{\" \"}\r\n                  <span style={{ color: \"orange\" }}>\r\n                    {props.preTokeForm.sessionPurpose}\r\n                  </span>\r\n                  , and expecting{\" \"}\r\n                  <span style={{ color: \"orange\" }}>\r\n                    {props.preTokeForm.expectToAchieve}\r\n                  </span>\r\n                  . I'm thinking about{\" \"}\r\n                  <span style={{ color: \"orange\" }}>\r\n                    {props.preTokeForm.lingeringWorries}\r\n                  </span>\r\n                  , but{\" \"}\r\n                  <span style={{ color: \"orange\" }}>\r\n                    {props.preTokeForm.goal}\r\n                  </span>\r\n                  . I have already{\" \"}\r\n                  <span style={{ color: \"orange\" }}>\r\n                    {props.preTokeForm.alreadyDone}\r\n                  </span>\r\n                  , and still need to{\" \"}\r\n                  <span style={{ color: \"orange\" }}>\r\n                    {props.preTokeForm.todo}\r\n                  </span>\r\n                  .\r\n                </div>\r\n                <FormControl>\r\n                  <InputLabel id=\"preMoodInput\">Current Mood</InputLabel>\r\n                  <Select\r\n                    labelId=\"preMoodInput\"\r\n                    id=\"preMood\"\r\n                    required\r\n                    value={props.preTokeForm.preMood}\r\n                    onChange={(e) => handleTextChange(e, \"preMood\")}\r\n                  >\r\n                    <MenuItem value=\"normal\">\r\n                      <em>Normal</em>\r\n                    </MenuItem>\r\n                    <MenuItem value={\"positive\"}>Positive</MenuItem>\r\n                    <MenuItem value={\"stressed\"}>Stressed</MenuItem>\r\n                    <MenuItem value={\"anxious\"}>Anxious</MenuItem>\r\n                    <MenuItem value={\"depressed\"}>Depressed</MenuItem>\r\n                    <MenuItem value={\"pain\"}>In Pain</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n                <FormControl>\r\n                  <InputLabel id=\"sessionPurposeInput\">\r\n                    What Do You Hope To Achieve With This Strain?\r\n                  </InputLabel>\r\n                  <Select\r\n                    labelId=\"sessionPurposeSelect\"\r\n                    id=\"sessionPurpose\"\r\n                    value={props.preTokeForm.sessionPurpose}\r\n                    onChange={(e) => handleTextChange(e, \"sessionPurpose\")}\r\n                    required\r\n                  >\r\n                    <MenuItem value={\"pain relief\"}>Pain Relief</MenuItem>\r\n                    <MenuItem value={\"stress relief\"}>Stress Relief</MenuItem>\r\n                    <MenuItem value={\"a creativity mindset\"}>\r\n                      Creativity\r\n                    </MenuItem>\r\n                    <MenuItem value={\"focus\"}>Focus</MenuItem>\r\n                    <MenuItem value={\"social awareness\"}>Recreation</MenuItem>\r\n                    <MenuItem value={\"an increased appreciation for art\"}>\r\n                      Art Enhancement\r\n                    </MenuItem>\r\n                    <MenuItem value={\"stillness\"}>Meditation</MenuItem>\r\n                    <MenuItem value={\"modularity\"}>Mental Modularity</MenuItem>\r\n                    <MenuItem value={\"something personal\"}>Other</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n                <TextField\r\n                  id=\"expectToAchieve\"\r\n                  label=\"Expectations\"\r\n                  placeholder=\"What Do You Expect To Experience/Feel/Achieve?\"\r\n                  multiline\r\n                  value={props.preTokeForm.expectToAchieve}\r\n                  onChange={handleTextChange}\r\n                  required\r\n                />\r\n                <TextField\r\n                  id=\"lingeringWorries\"\r\n                  label=\"Worries? Lingering thoughts?\"\r\n                  placeholder=\"Trying To Forget Something? Or Dwell On Something?\"\r\n                  multiline\r\n                  value={props.preTokeForm.lingeringWorries}\r\n                  onChange={handleTextChange}\r\n                  required\r\n                />\r\n                <TextField\r\n                  id=\"goal\"\r\n                  label=\"Short/Long-Term Goals\"\r\n                  placeholder=\"How Will This Session Get You There?\"\r\n                  multiline\r\n                  value={props.preTokeForm.goal}\r\n                  onChange={handleTextChange}\r\n                  required\r\n                />\r\n                <TextField\r\n                  id=\"alreadyDone\"\r\n                  label=\"To-Do(ne)\"\r\n                  placeholder=\"What Have You Already Accomplished Today?\"\r\n                  multiline\r\n                  value={props.preTokeForm.alreadyDone}\r\n                  onChange={handleTextChange}\r\n                  required\r\n                />\r\n                <TextField\r\n                  id=\"todo\"\r\n                  label=\"Todos (before you forget!)\"\r\n                  placeholder=\"What Do You Still Need To Accomplish Today?\"\r\n                  multiline\r\n                  value={props.preTokeForm.todo}\r\n                  onChange={handleTextChange}\r\n                  required\r\n                />\r\n                <br />\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  style={{ marginTop: \"10px\" }}\r\n                >\r\n                  Let's toke up\r\n                </Button>\r\n              </form>\r\n            </DialogContent>\r\n          </Dialog>\r\n        </Typography>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\n// import { Container, Box, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function PerfectStrainDescriptionCard(props) {\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(() => {\r\n    props.fetchDescription(props.sID);\r\n  }, []);\r\n\r\n  const strain = props.perfectStrainResults.find((s) => s[1].id == props.sID);\r\n\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  // const handleOpen = () => {\r\n  //   setOpen(true);\r\n  // };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    props.setDescriptionModal(false);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Modal\r\n        open={open}\r\n        onClose={() => handleClose()}\r\n        aria-labelledby=\"strain\"\r\n        aria-describedby=\"strain-description\"\r\n      >\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12}>\r\n              <Typography>\r\n                <h1\r\n                  style={{\r\n                    color:\r\n                      props.strainRace === \"sativa\"\r\n                        ? \"gold\"\r\n                        : props.strainRace === \"indica\"\r\n                        ? \"orchid\"\r\n                        : \"indianred\",\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  {props.strainName || strain[0]}\r\n                </h1>\r\n\r\n                <hr />\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography>\r\n                <h3 style={{ color: \"lightgray\" }}>\r\n                  {props.strainDescription\r\n                    ? props.strainDescription\r\n                    : \"No Bio Available\"}\r\n                </h3>\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </Modal>\r\n    </Container>\r\n  );\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport PerfectStrainDescriptionCard from \"../../components/cards/PerfectStrainDescriptionCard\";\r\nimport {\r\n  setUser,\r\n  fetchAllStrains,\r\n  fetchUserSearchResults,\r\n  fetchEffects,\r\n  fetchFlavors,\r\n  fetchDescription,\r\n} from \"../../redux/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    userSearchResults: state.userSearchResults,\r\n    allStrains: state.allStrains,\r\n    searchParams: state.searchParams,\r\n    effects: state.effects,\r\n    flavors: state.flavors,\r\n    posPrefs: state.posPrefs,\r\n    avoidPrefs: state.avoidPrefs,\r\n    medPrefs: state.medPrefs,\r\n    flavPrefs: state.flavPrefs,\r\n    speciesPrefs: state.speciesPrefs,\r\n    strainDescription: state.strainDescription,\r\n    perfectStrainResults: state.perfectStrainResults,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setUser: (username) => dispatch(setUser(username)),\r\n    fetchAllStrains: () => dispatch(fetchAllStrains()),\r\n    fetchUserSearchResults: (input) => dispatch(fetchUserSearchResults(input)),\r\n    fetchEffects: (input) => dispatch(fetchEffects(input)),\r\n    fetchFlavors: (input) => dispatch(fetchFlavors(input)),\r\n    fetchDescription: (input) => dispatch(fetchDescription(input)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PerfectStrainDescriptionCard);\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Grid,\r\n  Typography,\r\n  Container,\r\n  Tooltip,\r\n  Zoom,\r\n} from \"@material-ui/core/\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport PerfectStrainDetailsCard from \"../../containers/cards/PerfectStrainDetailsCard\";\r\nimport SnackbarAddFav from \"../../containers/modals/SnackbarAddFav\";\r\nimport RecordPreLog from \"../../containers/forms/RecordPreLog\";\r\nimport PerfectStrainDescriptionCard from \"../../containers/cards/PerfectStrainDescriptionCard\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icon: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  heroContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  cardMedia: {\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(6),\r\n  },\r\n  info: {\r\n    backgroundImage:\r\n      \"url(./../indica-vs-sativa-understanding-the-difference.png)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n    minHeight: \"500px\",\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n  tooManyResults: {\r\n    backgroundImage: \"url(./../picky.jpg)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n    minHeight: \"500px\",\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n  noResults: {\r\n    backgroundImage: \"url(./../whole_world_in_my_hand.png)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n    minHeight: \"500px\",\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n}));\r\n\r\nconst BioToolTip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: \"#424242\",\r\n    color: \"orange\",\r\n    maxWidth: 220,\r\n    fontSize: theme.typography.pxToRem(12),\r\n    border: \"1px solid #dadde9\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default function PerfectStrainCards(props) {\r\n  const classes = useStyles();\r\n  const [showDetailsModal, setDetailsModal] = React.useState(false);\r\n  const [showDescriptionModal, setDescriptionModal] = React.useState(false);\r\n  const [strainID, setID] = React.useState(null);\r\n\r\n  const handleDetailsModal = (e) => {\r\n    setID(e.currentTarget.id);\r\n    setDetailsModal(true);\r\n  };\r\n\r\n  const handleDescriptionModal = (e) => {\r\n    setID(e.currentTarget.id);\r\n    setDescriptionModal(true);\r\n  };\r\n\r\n  const handleAddFav = (e) => {\r\n    setID(e.currentTarget.id);\r\n    let fav = props.favStrainObj;\r\n    const id = e.currentTarget.id;\r\n    const existingFav = props.favorites.find((x) => x.strainId == id);\r\n    let strain = props.perfectStrainResults.find((s) => s[1].id == id);\r\n    fav.username = props.user;\r\n    fav.strainId = strain[1].id;\r\n    fav.strainName = strain[0];\r\n    fav.strainSpecies = strain[1].race;\r\n    props.setFavStrainObj(fav);\r\n    props.setTitle(fav.strainName);\r\n    axios.post(\"/favorites\", fav, {\r\n      headers: {\r\n        Authorization: `Bearer ${props.bearerToken}`,\r\n      },\r\n    });\r\n    !existingFav && props.addFavorite(fav) && props.toggleSnackbar(true);\r\n  };\r\n\r\n  const showSpeciesName = (x) => {\r\n    return x.race.charAt(0).toUpperCase() + x.race.slice(1);\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.cardGrid} maxWidth=\"md\">\r\n      <SnackbarAddFav sID={strainID} />\r\n      {showDetailsModal && (\r\n        <PerfectStrainDetailsCard\r\n          setDetailsModal={setDetailsModal}\r\n          sID={strainID}\r\n        />\r\n      )}\r\n      {showDescriptionModal && (\r\n        <PerfectStrainDescriptionCard\r\n          setDescriptionModal={setDescriptionModal}\r\n          sID={strainID}\r\n        />\r\n      )}\r\n      {props.perfectStrainResults.length === 0 && (\r\n        <div className={classes.info}></div>\r\n      )}\r\n\r\n      {props.perfectStrainResults[0][1][\"race\"] === \"no results\" ? (\r\n        <div className={classes.noResults}>\r\n          {\" \"}\r\n          <h2>\r\n            <span style={{ color: \"darkorange\" }}>No Results.</span>\r\n            <br /> Remove A Preference Or Two <br />{\" \"}\r\n            <span style={{ color: \"crimson\" }}>Hint:</span>{\" \"}\r\n            <span style={{ color: \"yellow\" }}>Pick at most 2 flavors.</span>\r\n          </h2>\r\n        </div>\r\n      ) : props.perfectStrainResults[0][1][\"race\"] === \"too many results\" ? (\r\n        <>\r\n          <h2>\r\n            <span style={{ color: \"orange\" }}>Too Many Results!</span> Please\r\n            Select Another Preference. Maybe Try Adding a Flavor.\r\n          </h2>\r\n          <div className={classes.tooManyResults}></div>\r\n        </>\r\n      ) : (\r\n        <Grid container spacing={4}>\r\n          {props.perfectStrainResults.map((card) => (\r\n            <Grid item key={card[1].id} xs={12} sm={6} md={4}>\r\n              <Card className={classes.card}>\r\n                <CardMedia\r\n                  className={classes.cardMedia}\r\n                  image={\r\n                    card[1].race === \"sativa\"\r\n                      ? \"./../smoking_the_butterflies.jpg\"\r\n                      : card[1].race === \"indica\"\r\n                      ? \"./../spaceman.jpg\"\r\n                      : \"./../hybrid_zebra.jpg\"\r\n                  }\r\n                  title=\"species\"\r\n                />\r\n                <CardContent className={classes.cardContent}>\r\n                  <Grid container>\r\n                    <Grid item xs={10}>\r\n                      <Typography\r\n                        variant=\"h5\"\r\n                        component=\"h2\"\r\n                        style={{ cursor: \"pointer\", color: \"\" }}\r\n                        id={card[1].id}\r\n                        onClick={(e) => handleDescriptionModal(e)}\r\n                      >\r\n                        <BioToolTip\r\n                          title={\r\n                            <React.Fragment>\r\n                              <Typography>Click For Bio</Typography>\r\n                            </React.Fragment>\r\n                          }\r\n                          placement=\"top\"\r\n                          TransitionComponent={Zoom}\r\n                        >\r\n                          <h2 className=\"card-title\">{card[0]}</h2>\r\n                        </BioToolTip>\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={2}></Grid>\r\n                  </Grid>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    component=\"h5\"\r\n                    style={{\r\n                      color:\r\n                        card[1].race == \"sativa\"\r\n                          ? \"gold\"\r\n                          : card[1].race == \"indica\"\r\n                          ? \"orchid\"\r\n                          : \"indianred\",\r\n                    }}\r\n                  >\r\n                    {showSpeciesName(card[1])}\r\n                  </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    onClick={(e) => handleDetailsModal(e)}\r\n                    id={card[1].id}\r\n                  >\r\n                    <Typography>Details</Typography>\r\n                  </Button>\r\n                  {!props.user && (\r\n                    <Button\r\n                      size=\"small\"\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      id={card[1].id}\r\n                      onClick={(e) => handleDescriptionModal(e)}\r\n                    >\r\n                      <Typography\r\n                        style={{\r\n                          fontWeight: \"600\",\r\n                          color: \"green\",\r\n                          textShadow: \"1px 1px yellowgreen\",\r\n                        }}\r\n                      >\r\n                        Bio\r\n                      </Typography>\r\n                    </Button>\r\n                  )}\r\n                  {props.user && (\r\n                    <>\r\n                      <Button\r\n                        size=\"small\"\r\n                        disableRipple\r\n                        color=\"secondary\"\r\n                        variant=\"contained\"\r\n                        className=\"heartIcon\"\r\n                        id={card[1].id}\r\n                        onClick={(e) => handleAddFav(e)}\r\n                      >\r\n                        <FavoriteIcon />\r\n                      </Button>\r\n                      <RecordPreLog\r\n                        id={card[1].id}\r\n                        strainName={String(card[0])}\r\n                      />\r\n                    </>\r\n                  )}\r\n                </CardActions>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport PerfectStrainCards from \"../../components/cards/PerfectStrainCards\";\r\nimport {\r\n  setUser,\r\n  fetchAllStrains,\r\n  fetchUserSearchResults,\r\n  setSpeciesPrefs,\r\n  fetchDescription,\r\n  fetchEffects,\r\n  fetchFlavors,\r\n  setUserSearchInput,\r\n  addFavorite,\r\n  toggleSnackbar,\r\n  setPerfectStrainResults,\r\n  setTitle,\r\n  toggleLoading,\r\n  setFavStrainObj,\r\n} from \"../../redux/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    bearerToken: state.bearerToken,\r\n    userSearchResults: state.userSearchResults,\r\n    allStrains: state.allStrains,\r\n    searchParams: state.searchParams,\r\n    userSearchInput: state.userSearchInput,\r\n    effects: state.effects,\r\n    posPrefs: state.posPrefs,\r\n    avoidPrefs: state.avoidPrefs,\r\n    medPrefs: state.medPrefs,\r\n    flavPrefs: state.flavPrefs,\r\n    speciesPrefs: state.speciesPrefs,\r\n    favorites: state.favorites,\r\n    toggleSnackbar: state.toggleSnackbar,\r\n    perfectStrainResults: state.perfectStrainResults,\r\n    title: state.title,\r\n    isLoading: state.isLoading,\r\n    favStrainObj: state.favStrainObj,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setUser: (username) => dispatch(setUser(username)),\r\n    fetchAllStrains: () => dispatch(fetchAllStrains()),\r\n    fetchUserSearchResults: (input) => dispatch(fetchUserSearchResults(input)),\r\n    setUserSearchInput: (input) => dispatch(setUserSearchInput(input)),\r\n    setSpeciesPrefs: (input) => dispatch(setSpeciesPrefs(input)),\r\n    fetchDescription: (input) => dispatch(fetchDescription(input)),\r\n    fetchEffects: (input) => dispatch(fetchEffects(input)),\r\n    fetchFlavors: (input) => dispatch(fetchFlavors(input)),\r\n    addFavorite: (fav) => dispatch(addFavorite(fav)),\r\n    toggleSnackbar: (input) => dispatch(toggleSnackbar(input)),\r\n    setPerfectStrainResults: (results) =>\r\n      dispatch(setPerfectStrainResults(results)),\r\n    setTitle: (input) => dispatch(setTitle(input)),\r\n    toggleLoading: (input) => dispatch(toggleLoading(input)),\r\n    setFavStrainObj: (fav) => dispatch(setFavStrainObj(fav)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PerfectStrainCards);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  CssBaseline,\r\n  Grid,\r\n  Typography,\r\n  Container,\r\n} from \"@material-ui/core/\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PerfectStrainCards from \"../containers/cards/PerfectStrainCards\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link to=\"/\" color=\"inherit\">\r\n        Higher Intentions\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icon: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  heroContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  cardMedia: {\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(6),\r\n  },\r\n  info: {\r\n    backgroundImage:\r\n      \"url(./../indica-vs-sativa-understanding-the-difference.png)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n    minHeight: \"500px\",\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n}));\r\n\r\nexport default function Home(props) {\r\n  const classes = useStyles();\r\n\r\n  const userHeader = () => {\r\n    return <div style={{ color: \"orange\" }}>{props.user}</div>;\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <main>\r\n        {/* Hero unit */}\r\n        <div className={classes.heroContent}>\r\n          <Container maxWidth=\"sm\">\r\n            <Typography\r\n              component=\"h1\"\r\n              variant=\"h2\"\r\n              align=\"center\"\r\n              color=\"textPrimary\"\r\n              gutterBottom\r\n            >\r\n              {props.user ? (\r\n                <div>\r\n                  Welcome, <span style={{ color: \"orange\" }}>{props.user}</span>\r\n                  !\r\n                </div>\r\n              ) : (\r\n                \"Higher Intentions\"\r\n              )}\r\n            </Typography>\r\n            <Typography\r\n              variant=\"h5\"\r\n              align=\"center\"\r\n              color=\"textSecondary\"\r\n              paragraph\r\n            >\r\n              Use our expertly crafted algorithm to search thousands of strains\r\n              and locate the perfect mood.{\" \"}\r\n              {!props.user\r\n                ? `Sign up to keep track of your\r\n              experience with each strain--posting them for others to reference,\r\n              or keeping them as a private collection.`\r\n                : `Click the strain's name for a short bio of each strain. Click the little astronaut to start tracking your experiences.`}\r\n            </Typography>\r\n            <div className={classes.heroButtons}>\r\n              <Grid container spacing={2} justify=\"center\">\r\n                <Grid item>\r\n                  <Button\r\n                    onClick={() => props.toggleFindPerfectStrain(true)}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                  >\r\n                    <Typography\r\n                      style={{\r\n                        fontWeight: 600,\r\n                        color: \"#FFA726\",\r\n                        textShadow: \"1px 1px #333\",\r\n                      }}\r\n                    >\r\n                      Find The Perfect Strain\r\n                    </Typography>\r\n                  </Button>\r\n                </Grid>\r\n                {!props.user && (\r\n                  <Grid item>\r\n                    <Link\r\n                      to=\"/signup\"\r\n                      style={{\r\n                        textDecoration: \"none\",\r\n                      }}\r\n                    >\r\n                      <Button variant=\"contained\" color=\"secondary\">\r\n                        <Typography\r\n                          style={{\r\n                            fontWeight: \"600\",\r\n                            color: \"green\",\r\n                            textShadow: \"1px 1px yellowgreen\",\r\n                          }}\r\n                        >\r\n                          Sign Up to Post Experience\r\n                        </Typography>\r\n                      </Button>\r\n                    </Link>\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n            </div>\r\n          </Container>\r\n        </div>\r\n        {props.perfectStrainResults.length === 0 ? (\r\n          <div className={classes.info}></div>\r\n        ) : (\r\n          <PerfectStrainCards />\r\n        )}\r\n      </main>\r\n      {/* Footer */}\r\n      <footer className={classes.footer}>\r\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n          HIGHER INTENTIONS\r\n        </Typography>\r\n        <Typography\r\n          variant=\"subtitle1\"\r\n          align=\"center\"\r\n          color=\"textSecondary\"\r\n          component=\"p\"\r\n        >\r\n          Enjoy a Paranoia!\r\n        </Typography>\r\n        <Copyright />\r\n      </footer>\r\n      {/* End footer */}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport Home from \"../components/Home\";\r\nimport {\r\n  setUser,\r\n  fetchAllStrains,\r\n  fetchUserSearchResults,\r\n  setSpeciesPrefs,\r\n  fetchDescription,\r\n  fetchEffects,\r\n  fetchFlavors,\r\n  setUserSearchInput,\r\n  addFavorite,\r\n  toggleSnackbar,\r\n  setPerfectStrainResults,\r\n  toggleFindPerfectStrain,\r\n} from \"../redux/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    userSearchResults: state.userSearchResults,\r\n    allStrains: state.allStrains,\r\n    searchParams: state.searchParams,\r\n    userSearchInput: state.userSearchInput,\r\n    effects: state.effects,\r\n    posPrefs: state.posPrefs,\r\n    avoidPrefs: state.avoidPrefs,\r\n    medPrefs: state.medPrefs,\r\n    flavPrefs: state.flavPrefs,\r\n    speciesPrefs: state.speciesPrefs,\r\n    favorites: state.favorites,\r\n    toggleSnackbar: state.toggleSnackbar,\r\n    perfectStrainResults: state.perfectStrainResults,\r\n    bearerToken: state.bearerToken,\r\n    experiences: state.experiences,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setUser: (username) => dispatch(setUser(username)),\r\n    fetchAllStrains: () => dispatch(fetchAllStrains()),\r\n    fetchUserSearchResults: (input) => dispatch(fetchUserSearchResults(input)),\r\n    setUserSearchInput: (input) => dispatch(setUserSearchInput(input)),\r\n    setSpeciesPrefs: (input) => dispatch(setSpeciesPrefs(input)),\r\n    fetchDescription: (input) => dispatch(fetchDescription(input)),\r\n    fetchEffects: (input) => dispatch(fetchEffects(input)),\r\n    fetchFlavors: (input) => dispatch(fetchFlavors(input)),\r\n    addFavorite: (input) => dispatch(addFavorite(input)),\r\n    toggleSnackbar: (input) => dispatch(toggleSnackbar(input)),\r\n    setPerfectStrainResults: (results) =>\r\n      dispatch(setPerfectStrainResults(results)),\r\n    toggleFindPerfectStrain: (input) =>\r\n      dispatch(toggleFindPerfectStrain(input)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import React from \"react\";\r\n// import { Container, Box, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nexport default function ExpDetailsModal(props) {\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(() => {\r\n    props.fetchEffects(props.sID);\r\n    props.fetchFlavors(props.sID);\r\n    props.fetchDescription(props.sID);\r\n  }, []);\r\n\r\n  const strain = Object.entries(props.allStrains).find(\r\n    (s) => s[1].id == props.sID\r\n  );\r\n  const positiveEffects = props.effects.positive;\r\n  const negativeEffects = props.effects.negative;\r\n  const medicalEffects = props.effects.medical;\r\n  const flavors = props.flavors;\r\n\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  // const handleOpen = () => {\r\n  //   setOpen(true);\r\n  // };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    props.setModal(false);\r\n  };\r\n\r\n  const strainDisplayName =\r\n    strain[1].race.charAt(0).toUpperCase() + strain[1].race.slice(1);\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={() => handleClose()}\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n    >\r\n      <div style={modalStyle} className={classes.paper}>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12}>\r\n            <h1 style={{ color: \"springgreen\", textAlign: \"center\" }}>\r\n              {strain[1].name}{\" \"}\r\n              {\r\n                <div\r\n                  style={{\r\n                    color:\r\n                      strain[1].race === \"sativa\"\r\n                        ? \"orange\"\r\n                        : strain[1].race === \"indica\"\r\n                        ? \"orchid\"\r\n                        : \"indianred\",\r\n                  }}\r\n                >\r\n                  {strainDisplayName}\r\n                </div>\r\n              }\r\n            </h1>\r\n            <hr />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <h2>\r\n              Positive Effects: {\"\"}\r\n              <span style={{ color: \"springgreen\" }}>\r\n                {positiveEffects.join(\", \")}\r\n              </span>\r\n            </h2>\r\n            <h2>\r\n              Negative Effects:{\" \"}\r\n              <span style={{ color: \"red\" }}>{negativeEffects.join(\", \")}</span>\r\n            </h2>\r\n            <h2 style={{ color: \"\" }}>\r\n              Helps to treat: {\"\"}\r\n              <span style={{ color: \"cornflowerblue\" }}>\r\n                {medicalEffects.join(\", \")}\r\n              </span>\r\n            </h2>\r\n            <h2 style={{ color: \"\" }}>\r\n              Flavors: {\"\"}\r\n              <span style={{ color: \"orange\" }}>{flavors.join(\", \")}</span>\r\n            </h2>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"body1\" style={{ color: \"lightgray\" }}>\r\n              {props.strainDescription}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport FavsDetailsModal from \"../../components/modals/FavsDetailsModal\";\r\nimport {\r\n  setUser,\r\n  fetchAllStrains,\r\n  fetchUserSearchResults,\r\n  fetchEffects,\r\n  fetchFlavors,\r\n  fetchDescription,\r\n} from \"../../redux/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    userSearchResults: state.userSearchResults,\r\n    allStrains: state.allStrains,\r\n    searchParams: state.searchParams,\r\n    effects: state.effects,\r\n    flavors: state.flavors,\r\n    posPrefs: state.posPrefs,\r\n    avoidPrefs: state.avoidPrefs,\r\n    medPrefs: state.medPrefs,\r\n    flavPrefs: state.flavPrefs,\r\n    speciesPrefs: state.speciesPrefs,\r\n    strainDescription: state.strainDescription,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setUser: (username) => dispatch(setUser(username)),\r\n    fetchAllStrains: () => dispatch(fetchAllStrains()),\r\n    fetchUserSearchResults: (input) => dispatch(fetchUserSearchResults(input)),\r\n    fetchEffects: (input) => dispatch(fetchEffects(input)),\r\n    fetchFlavors: (input) => dispatch(fetchFlavors(input)),\r\n    fetchDescription: (input) => dispatch(fetchDescription(input)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FavsDetailsModal);\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\n// import FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport { faHeartBroken } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Grid,\r\n  Typography,\r\n  Container,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport RecordPreLog from \"../../containers/forms/RecordPreLog\";\r\nimport FavsDetailsModal from \"../../containers/modals/FavsDetailsModal\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icon: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  heroContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  cardGrid: {\r\n    marginTop: 10,\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  cardMedia: {\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(6),\r\n  },\r\n  info: {\r\n    backgroundImage: \"url(./../memorexijuana.jpg)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n    minHeight: \"500px\",\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n}));\r\n\r\nexport default function FavStrainsCards(props) {\r\n  const classes = useStyles();\r\n  const [showDetailsModal, setDetailsModal] = React.useState(false);\r\n  const [strainID, setID] = React.useState(null);\r\n  const [strainRace, setStrainRace] = React.useState(null);\r\n  const [strainName, setStrainName] = React.useState(null);\r\n\r\n  React.useEffect(() => {\r\n    props.fetchAllStrains();\r\n  }, []);\r\n\r\n  const handleDelete = (e, id) => {\r\n    // let id = e.currentTarget.id;\r\n    props.removeFavorite(id);\r\n    axios.delete(`/favorites/${id}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${props.bearerToken}`,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleDetailsModal = (e) => {\r\n    setID(e.currentTarget.id);\r\n    const strain = Object.entries(props.allStrains).find(\r\n      (strain) => strain[1].id == e.currentTarget.id\r\n    );\r\n    setStrainName(strain[0]);\r\n    setStrainRace(strain[1].id);\r\n    setDetailsModal(true);\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.cardGrid} maxWidth=\"md\">\r\n      {showDetailsModal && (\r\n        <FavsDetailsModal\r\n          setDetailsModal={setDetailsModal}\r\n          sID={strainID}\r\n          strainRace={strainRace}\r\n          strainName={strainName}\r\n          setModal={setDetailsModal}\r\n        />\r\n      )}\r\n      {props.favorites.length === 0 && (\r\n        <div className={classes.info}>\r\n          <Typography style={{ color: \"white\" }} variant=\"h4\">\r\n            Use Our Perfect Strain Finder To Add <br />\r\n            Some Favorites!\r\n          </Typography>\r\n        </div>\r\n      )}\r\n      <Grid container spacing={4}>\r\n        {props.favorites.map((card) => (\r\n          <Grid item key={card.strainId} xs={12} sm={6} md={4}>\r\n            <Card className={classes.card}>\r\n              <CardMedia\r\n                className={classes.cardMedia}\r\n                image={\r\n                  card.strainSpecies === \"sativa\"\r\n                    ? \"./../smoking_the_butterflies.jpg\"\r\n                    : card.strainSpecies === \"indica\"\r\n                    ? \"./../spaceman.jpg\"\r\n                    : \"./../hybrid_zebra.jpg\"\r\n                }\r\n                title=\"species\"\r\n              />\r\n              <CardContent className={classes.cardContent}>\r\n                <Grid container>\r\n                  <Typography\r\n                    variant=\"h4\"\r\n                    id={card.strainId}\r\n                    style={{\r\n                      color:\r\n                        card.strainSpecies === \"sativa\"\r\n                          ? \"gold\"\r\n                          : card.strainSpecies === \"indica\"\r\n                          ? \"orchid\"\r\n                          : \"indianred\",\r\n                    }}\r\n                  >\r\n                    {card.strainName}\r\n                  </Typography>\r\n                </Grid>\r\n              </CardContent>\r\n              <CardActions>\r\n                <Button\r\n                  size=\"small\"\r\n                  color=\"primary\"\r\n                  variant=\"contained\"\r\n                  onClick={(e) => handleDetailsModal(e)}\r\n                  id={card.strainId}\r\n                >\r\n                  <Typography>View</Typography>\r\n                </Button>\r\n                <Button\r\n                  size=\"small\"\r\n                  disableRipple\r\n                  color=\"secondary\"\r\n                  variant=\"contained\"\r\n                  className=\"heartIcon\"\r\n                  id={card.strainId}\r\n                  onClick={(e) => handleDelete(e, card.strainId)}\r\n                >\r\n                  <FontAwesomeIcon\r\n                    icon={faHeartBroken}\r\n                    size=\"2x\"\r\n                    className=\"brokenheart-icon\"\r\n                  />\r\n                </Button>\r\n                <RecordPreLog\r\n                  id={card.strainId}\r\n                  strainName={card.strainName}\r\n                  strainSpecies={card.strainSpecies}\r\n                />\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport FavStrainsCards from \"../../components/cards/FavStrainsCards\";\r\nimport {\r\n  setUser,\r\n  fetchAllStrains,\r\n  fetchUserSearchResults,\r\n  setSpeciesPrefs,\r\n  fetchDescription,\r\n  fetchEffects,\r\n  fetchFlavors,\r\n  setUserSearchInput,\r\n  addFavorite,\r\n  removeFavorite,\r\n  addFavorites,\r\n  toggleSnackbar,\r\n  setPerfectStrainResults,\r\n} from \"../../redux/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    bearerToken: state.bearerToken,\r\n    userSearchResults: state.userSearchResults,\r\n    allStrains: state.allStrains,\r\n    searchParams: state.searchParams,\r\n    userSearchInput: state.userSearchInput,\r\n    effects: state.effects,\r\n    posPrefs: state.posPrefs,\r\n    avoidPrefs: state.avoidPrefs,\r\n    medPrefs: state.medPrefs,\r\n    flavPrefs: state.flavPrefs,\r\n    speciesPrefs: state.speciesPrefs,\r\n    favorites: state.favorites,\r\n    toggleSnackbar: state.toggleSnackbar,\r\n    perfectStrainResults: state.perfectStrainResults,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setUser: (username) => dispatch(setUser(username)),\r\n    fetchAllStrains: () => dispatch(fetchAllStrains()),\r\n    fetchUserSearchResults: (input) => dispatch(fetchUserSearchResults(input)),\r\n    setUserSearchInput: (input) => dispatch(setUserSearchInput(input)),\r\n    setSpeciesPrefs: (input) => dispatch(setSpeciesPrefs(input)),\r\n    fetchDescription: (input) => dispatch(fetchDescription(input)),\r\n    fetchEffects: (input) => dispatch(fetchEffects(input)),\r\n    fetchFlavors: (input) => dispatch(fetchFlavors(input)),\r\n    addFavorite: (fav) => dispatch(addFavorite(fav)),\r\n    removeFavorite: (input) => dispatch(removeFavorite(input)),\r\n    addFavorites: (arr) => dispatch(addFavorites(arr)),\r\n    toggleSnackbar: (input) => dispatch(toggleSnackbar(input)),\r\n    setPerfectStrainResults: (results) =>\r\n      dispatch(setPerfectStrainResults(results)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FavStrainsCards);\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  CssBaseline,\r\n  TextField,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Paper,\r\n  Box,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { faBong } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link to=\"/\" color=\"inherit\" style={{ cursor: \"pointer\" }}>\r\n        Higher Intentions\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage: \"url(./../spaceman.jpg)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst SignUp = (props) => {\r\n  const classes = useStyles();\r\n  const [redirectHome, setRedirectHome] = React.useState(null);\r\n\r\n  const handleTextChange = (e) => {\r\n    const newState = props.profile;\r\n    newState[e.target.id] = e.target.value;\r\n    props.setProfile(newState);\r\n  };\r\n\r\n  const userCredsObject = {\r\n    username: props.profile.username,\r\n    password: props.profile.password,\r\n    email: props.profile.email,\r\n  };\r\n\r\n  const userObject = {\r\n    firstName: props.profile.firstName,\r\n    lastName: props.profile.lastName,\r\n    username: props.profile.username,\r\n  };\r\n\r\n  const setProfile = async (e) => {\r\n    e.preventDefault();\r\n    await axios.post(\"/auth/signup\", userCredsObject);\r\n    await axios.post(\"/auth/login\", userCredsObject).then((res) => {\r\n      props.storeToken(res.data.token);\r\n    });\r\n    await axios.post(\"/users\", userObject);\r\n    const profile = props.profile;\r\n    props.setProfile(profile);\r\n    props.setUser(props.profile.username);\r\n    setRedirectHome(true);\r\n  };\r\n\r\n  if (redirectHome) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <FontAwesomeIcon\r\n              icon={faBong}\r\n              size=\"1x\"\r\n              style={{ color: \"black\" }}\r\n            />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign Up\r\n          </Typography>\r\n          <form className={classes.form} onSubmit={setProfile}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              onChange={handleTextChange}\r\n              value={props.firstName}\r\n              fullWidth\r\n              id=\"firstName\"\r\n              name=\"firstName\"\r\n              label=\"First Name\"\r\n              type=\"text\"\r\n              autoComplete=\"firstName\"\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              onChange={handleTextChange}\r\n              value={props.lastName}\r\n              fullWidth\r\n              name=\"lastName\"\r\n              label=\"Last Name\"\r\n              type=\"text\"\r\n              id=\"lastName\"\r\n              autoComplete=\"current-lastName\"\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              onChange={handleTextChange}\r\n              value={props.username}\r\n              fullWidth\r\n              name=\"username\"\r\n              label=\"Username\"\r\n              type=\"username\"\r\n              id=\"username\"\r\n              autoComplete=\"current-username\"\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              onChange={handleTextChange}\r\n              value={props.password}\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"text\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              onChange={handleTextChange}\r\n              value={props.email}\r\n              fullWidth\r\n              name=\"email\"\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              id=\"email\"\r\n              autoComplete=\"current-email\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link to=\"/\" variant=\"body2\">\r\n                  {\"Continue As Guest\"}\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link to=\"/signup\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import { connect } from \"react-redux\";\r\nimport SignUp from \"../../components/forms/SignUp\";\r\nimport {\r\n  addPreExp,\r\n  setPreTokeForm,\r\n  setProfile,\r\n  setUser,\r\n  addUser,\r\n  storeToken,\r\n} from \"../../redux/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    preTokeForm: state.preTokeForm,\r\n    experiences: state.experiences,\r\n    perfectStrainResults: state.perfectStrainResults,\r\n    firstName: state.profile.firstName,\r\n    lastName: state.profile.lastName,\r\n    email: state.profile.email,\r\n    password: state.profile.password,\r\n    city: state.profile.city,\r\n    state: state.profile.state,\r\n    profile: state.profile,\r\n    checkUser: state.checkUser,\r\n    bearerToken: state.bearerToken,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPreExp: (exp) => dispatch(addPreExp(exp)),\r\n    setPreTokeForm: (input) => dispatch(setPreTokeForm(input)),\r\n    setProfile: (input) => dispatch(setProfile(input)),\r\n    addUser: (input) => dispatch(addUser(input)),\r\n    setUser: (input) => dispatch(setUser(input)),\r\n    storeToken: (input) => dispatch(storeToken(input)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import { connect } from \"react-redux\";\r\nimport ViewPreTokeModal from \"../../components/modals/ViewPreTokeModal\";\r\nimport { addPreExp, setPreTokeForm } from \"../../redux/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    preTokeForm: state.preTokeForm,\r\n    preLogs: state.preLogs,\r\n    experiences: state.experiences,\r\n    perfectStrainResults: state.perfectStrainResults,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPreExp: (exp) => dispatch(addPreExp(exp)),\r\n    setPreTokeForm: (input) => dispatch(setPreTokeForm(input)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewPreTokeModal);\r\n","import React, { Fragment } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Dialog, DialogContent, DialogTitle } from \"@material-ui/core\";\r\n\r\nexport default function ViewPreTokeModal(props) {\r\n  const [open, toggleOpen] = React.useState(true);\r\n\r\n  const preLog = props.preLogs.find((pre) => pre.strainId == props.sID);\r\n\r\n  const handleClose = () => {\r\n    toggleOpen(false);\r\n    props.setViewPreTokeModal(false);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Typography>\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle>\r\n            <Typography variant=\"h5\">\r\n              Before You Tried{\" \"}\r\n              {\r\n                <span style={{ color: \"springgreen\" }}>\r\n                  {preLog.strainName}\r\n                </span>\r\n              }\r\n            </Typography>\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            While I'm feeling{\" \"}\r\n            <span style={{ color: \"orange\" }}>{preLog.preMood}</span>, I'm\r\n            hoping to achieve{\" \"}\r\n            <span style={{ color: \"orange\" }}>{preLog.sessionPurpose}</span>,\r\n            and expecting{\" \"}\r\n            <span style={{ color: \"orange\" }}>{preLog.expectToAchieve}</span>.\r\n            I'm thinking about{\" \"}\r\n            <span style={{ color: \"orange\" }}>{preLog.lingeringWorries}</span>,\r\n            but <span style={{ color: \"orange\" }}>{preLog.goal}</span>. I have\r\n            already{\" \"}\r\n            <span style={{ color: \"orange\" }}>{preLog.alreadyDone}</span>, and\r\n            still need to <span style={{ color: \"orange\" }}>{preLog.todo}</span>\r\n            .\r\n          </DialogContent>\r\n        </Dialog>\r\n      </Typography>\r\n    </Fragment>\r\n  );\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport RecordReview from \"../../components/forms/RecordReview\";\r\nimport {\r\n  addPreExp,\r\n  setPreTokeForm,\r\n  setReviewForm,\r\n  addReview,\r\n} from \"../../redux/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    bearerToken: state.bearerToken,\r\n    preTokeForm: state.preTokeForm,\r\n    experiences: state.experiences,\r\n    perfectStrainResults: state.perfectStrainResults,\r\n    reviewForm: state.reviewForm,\r\n    reviews: state.reviews,\r\n    preLogs: state.preLogs,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setPreTokeForm: (input) => dispatch(setPreTokeForm(input)),\r\n    setReviewForm: (input) => dispatch(setReviewForm(input)),\r\n    addPreExp: (exp) => dispatch(addPreExp(exp)),\r\n    addReview: (exp) => dispatch(addReview(exp)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RecordReview);\r\n","import React, { Fragment } from \"react\";\r\nimport axios from \"axios\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n} from \"@material-ui/core\";\r\n\r\nexport default function RecordReview(props) {\r\n  const [open, toggleOpen] = React.useState(true);\r\n\r\n  const toggleDialog = () => toggleOpen(!open);\r\n\r\n  const preLog = props.preLogs.find((prelog) => prelog.strainId == props.sID);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const review = props.reviewForm;\r\n    review.username = props.user;\r\n    await axios\r\n      .get(`/prelogs/${props.user}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${props.bearerToken}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        review.session_id = response.data.find(\r\n          (x) => x.strainId == props.sID\r\n        ).id;\r\n        return;\r\n      });\r\n    review.strainId = preLog.strainId;\r\n    review.strainName = preLog.strainName;\r\n    review.strainSpecies = preLog.strainSpecies;\r\n    await props.addReview(review);\r\n    axios.post(\"/reviews\", review, {\r\n      headers: {\r\n        Authorization: `Bearer ${props.bearerToken}`,\r\n      },\r\n    });\r\n    toggleOpen(false);\r\n    clearAll();\r\n  };\r\n\r\n  const clearAll = () => {\r\n    props.setReviewForm({\r\n      budDescript: \"\",\r\n      goodFor: \"\",\r\n      transformedMood: \"\",\r\n      transformedExpectations: \"\",\r\n      experience: \"\",\r\n      transformedWorries: \"\",\r\n      transformedGoals: \"\",\r\n    });\r\n  };\r\n\r\n  const handleTextChange = (e, x) => {\r\n    const newState = props.reviewForm;\r\n    newState[e.target.id] = e.target.value;\r\n    newState[x] = e.target.value;\r\n    props.setReviewForm(newState);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Typography>\r\n        <Dialog\r\n          open={open}\r\n          onClose={(toggleDialog, () => props.setAddReviewForm(false))}\r\n        >\r\n          <DialogTitle>\r\n            <Typography variant=\"h5\">\r\n              Review{\" \"}\r\n              {\r\n                <span style={{ color: \"springgreen\" }}>\r\n                  {preLog.strainName}\r\n                </span>\r\n              }\r\n            </Typography>\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <form\r\n              onSubmit={handleSubmit}\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                width: \"350px\",\r\n              }}\r\n            >\r\n              <div style={{ paddingBottom: 10 }}>\r\n                The bud was{\" \"}\r\n                <span style={{ color: \"springgreen\" }}>\r\n                  {props.reviewForm.budDescript}\r\n                </span>\r\n                . This strain is good for{\" \"}\r\n                <span style={{ color: \"springgreen\" }}>\r\n                  {props.reviewForm.goodFor}\r\n                </span>\r\n                . I started out feeling{\" \"}\r\n                <span style={{ color: \"orange\" }}>\r\n                  {preLog.transformedMood}\r\n                </span>\r\n                , and ended up feeling{\" \"}\r\n                <span style={{ color: \"orange\" }}>\r\n                  {props.reviewForm.transformedMood}\r\n                </span>\r\n                . I was expecting{\" \"}\r\n                <span style={{ color: \"orange\" }}>\r\n                  {preLog.transformedExpectations}{\" \"}\r\n                </span>\r\n                afterwards,{\" \"}\r\n                <span style={{ color: \"orange\" }}>\r\n                  {props.reviewForm.transformedExpectations}\r\n                </span>\r\n                . I was thinking about{\" \"}\r\n                <span style={{ color: \"orange\" }}>\r\n                  {preLog.transformedWorries}\r\n                </span>\r\n                , and believing{\" \"}\r\n                <span style={{ color: \"orange\" }}>\r\n                  {preLog.transformedGoals}\r\n                </span>\r\n                . I experienced{\" \"}\r\n                <span style={{ color: \"orange\" }}>\r\n                  {props.reviewForm.experience}\r\n                </span>{\" \"}\r\n                and my worries{\" \"}\r\n                <span style={{ color: \"orange\" }}>\r\n                  {props.reviewForm.transformedWorries}{\" \"}\r\n                </span>\r\n                .{\" \"}\r\n                <span style={{ color: \"orange\" }}>\r\n                  {props.reviewForm.transformedGoals}\r\n                </span>\r\n                .\r\n              </div>\r\n\r\n              <TextField\r\n                id=\"budDescript\"\r\n                label=\"Appearance/Texture/Aroma/Density\"\r\n                placeholder=\"Briefly Describe The Quality Of The Bud\"\r\n                multiline\r\n                value={props.reviewForm.budDescript}\r\n                onChange={handleTextChange}\r\n                required\r\n              />\r\n              <FormControl>\r\n                <InputLabel id=\"reasonInput\">\r\n                  Did This Strain Help To Achieve Any Of The Following:\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"reasonInput\"\r\n                  id=\"goodFor\"\r\n                  required\r\n                  value={props.reviewForm.goodFor}\r\n                  onChange={(e) => handleTextChange(e, \"goodFor\")}\r\n                >\r\n                  <MenuItem value={\"pain relief\"}>Pain Relief</MenuItem>\r\n                  <MenuItem value={\"stress relief\"}>Stress Relief</MenuItem>\r\n                  <MenuItem value={\"a creativity mindset\"}>Creativity</MenuItem>\r\n                  <MenuItem value={\"focus\"}>Focus</MenuItem>\r\n                  <MenuItem value={\"social awareness\"}>Recreation</MenuItem>\r\n                  <MenuItem value={\"stillness\"}>Meditation</MenuItem>\r\n                  <MenuItem value={\"modularity\"}>Mental Modularity</MenuItem>\r\n                  <MenuItem value={\"something personal\"}>Other</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              <FormControl>\r\n                <InputLabel id=\"moodInput\">New Mood</InputLabel>\r\n                <Select\r\n                  labelId=\"moodInput\"\r\n                  id=\"transformedMood\"\r\n                  required\r\n                  value={props.reviewForm.transformedMood}\r\n                  onChange={(e) => handleTextChange(e, \"transformedMood\")}\r\n                >\r\n                  <MenuItem value=\"normal\">\r\n                    <em>Normal</em>\r\n                  </MenuItem>\r\n                  <MenuItem value={\"positive\"}>Positive</MenuItem>\r\n                  <MenuItem value={\"stressed\"}>Stressed</MenuItem>\r\n                  <MenuItem value={\"anxious\"}>Anxious</MenuItem>\r\n                  <MenuItem value={\"depressed\"}>Depressed</MenuItem>\r\n                  <MenuItem value={\"pain\"}>In Pain</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              <TextField\r\n                id=\"transformedExpectations\"\r\n                label=\"Epiphanies? Regrets?\"\r\n                placeholder=\"How Did The Experience Transform Your Expectations?\"\r\n                multiline\r\n                value={props.reviewForm.transformedExpectations}\r\n                onChange={handleTextChange}\r\n                required\r\n              />\r\n              <TextField\r\n                id=\"experience\"\r\n                label=\"Experience\"\r\n                placeholder=\"What Did You Experience/Feel/Achieve?\"\r\n                multiline\r\n                required\r\n                value={props.reviewForm.experience}\r\n                onChange={handleTextChange}\r\n              />\r\n              <TextField\r\n                id=\"transformedWorries\"\r\n                label=\"Worries\"\r\n                placeholder=\"Have Your Worries Transformed? How?\"\r\n                multiline\r\n                required\r\n                value={props.reviewForm.transformedWorries}\r\n                onChange={handleTextChange}\r\n              />\r\n              <TextField\r\n                id=\"transformedGoals\"\r\n                label=\"Short/Long-Term Goals\"\r\n                placeholder=\"Did The Session Contribute To Your Short/Long-Term Goals? Did It Detract? How?\"\r\n                multiline\r\n                required\r\n                value={props.reviewForm.transformedGoals}\r\n                onChange={handleTextChange}\r\n              />\r\n              <br />\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                style={{ marginTop: \"10px\" }}\r\n              >\r\n                Leave Review\r\n              </Button>\r\n            </form>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </Typography>\r\n    </Fragment>\r\n  );\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport ViewReviewModal from \"../../components/modals/ViewReviewModal\";\r\nimport { addPreExp, setPreTokeForm } from \"../../redux/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    preTokeForm: state.preTokeForm,\r\n    reviewForm: state.reviewForm,\r\n    experiences: state.experiences,\r\n    preLogs: state.preLogs,\r\n    reviews: state.reviews,\r\n    perfectStrainResults: state.perfectStrainResults,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPreExp: (exp) => dispatch(addPreExp(exp)),\r\n    setPreTokeForm: (input) => dispatch(setPreTokeForm(input)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewReviewModal);\r\n","import React, { Fragment } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Dialog, DialogContent, DialogTitle } from \"@material-ui/core\";\r\n\r\nexport default function ViewReviewModal(props) {\r\n  const [open, toggleOpen] = React.useState(true);\r\n\r\n  const preLog = props.preLogs.find((pre) => pre.strainId == props.sID);\r\n\r\n  const review = props.reviews.find((review) => review.strainId == props.sID);\r\n\r\n  const handleClose = () => {\r\n    toggleOpen(false);\r\n    props.setViewReviewModal(false);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Typography>\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle>\r\n            <Typography variant=\"h5\">\r\n              After Trying{\" \"}\r\n              {\r\n                <span style={{ color: \"springgreen\" }}>\r\n                  {review.strainName}\r\n                </span>\r\n              }\r\n            </Typography>\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            The bud was{\" \"}\r\n            <span style={{ color: \"springgreen\" }}>{review.budDescript}</span>.\r\n            This strain is good for{\" \"}\r\n            <span style={{ color: \"springgreen\" }}>{review.goodFor}</span>. I\r\n            started out feeling{\" \"}\r\n            <span style={{ color: \"orange\" }}>{preLog.preMood}</span>, and ended\r\n            up feeling{\" \"}\r\n            <span style={{ color: \"orange\" }}>{review.transformedMood}</span>. I\r\n            was expecting{\" \"}\r\n            <span style={{ color: \"orange\" }}>{preLog.expectToAchieve}; </span>\r\n            afterwards,{\" \"}\r\n            <span style={{ color: \"orange\" }}>\r\n              {review.transformedExpectations}\r\n            </span>\r\n            . I was thinking about{\" \"}\r\n            <span style={{ color: \"orange\" }}>{preLog.lingeringWorries}</span>,\r\n            and believing <span style={{ color: \"orange\" }}>{preLog.goal}</span>\r\n            . I experienced{\" \"}\r\n            <span style={{ color: \"orange\" }}>{review.experience}</span> and my\r\n            worries{\" \"}\r\n            <span style={{ color: \"orange\" }}>{review.transformedWorries}</span>\r\n            . <span style={{ color: \"orange\" }}>{review.transformedGoals}</span>\r\n            .\r\n          </DialogContent>\r\n        </Dialog>\r\n      </Typography>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\n// import { Container, Box, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nexport default function ExpDetailsModal(props) {\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(() => {\r\n    props.fetchEffects(props.sID);\r\n    props.fetchFlavors(props.sID);\r\n    props.fetchDescription(props.sID);\r\n  }, []);\r\n\r\n  const strain = Object.entries(props.allStrains).find(\r\n    (s) => s[1].id == props.sID\r\n  );\r\n  const positiveEffects = props.effects.positive;\r\n  const negativeEffects = props.effects.negative;\r\n  const medicalEffects = props.effects.medical;\r\n  const flavors = props.flavors;\r\n\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  // const handleOpen = () => {\r\n  //   setOpen(true);\r\n  // };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    props.setModal(false);\r\n  };\r\n\r\n  const strainDisplayName =\r\n    strain[1].race.charAt(0).toUpperCase() + strain[1].race.slice(1);\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={() => handleClose()}\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n    >\r\n      <div style={modalStyle} className={classes.paper}>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12}>\r\n            <h1 style={{ color: \"springgreen\", textAlign: \"center\" }}>\r\n              {strain[1].name}{\" \"}\r\n              {\r\n                <div\r\n                  style={{\r\n                    color:\r\n                      strain[1].race === \"sativa\"\r\n                        ? \"orange\"\r\n                        : strain[1].race === \"indica\"\r\n                        ? \"orchid\"\r\n                        : \"indianred\",\r\n                  }}\r\n                >\r\n                  {strainDisplayName}\r\n                </div>\r\n              }\r\n            </h1>\r\n            <hr />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <h2>\r\n              Positive Effects: {\"\"}\r\n              <span style={{ color: \"springgreen\" }}>\r\n                {positiveEffects.join(\", \")}\r\n              </span>\r\n            </h2>\r\n            <h2>\r\n              Negative Effects:{\" \"}\r\n              <span style={{ color: \"red\" }}>{negativeEffects.join(\", \")}</span>\r\n            </h2>\r\n            <h2 style={{ color: \"\" }}>\r\n              Helps to treat: {\"\"}\r\n              <span style={{ color: \"cornflowerblue\" }}>\r\n                {medicalEffects.join(\", \")}\r\n              </span>\r\n            </h2>\r\n            <h2 style={{ color: \"\" }}>\r\n              Flavors: {\"\"}\r\n              <span style={{ color: \"orange\" }}>{flavors.join(\", \")}</span>\r\n            </h2>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"body1\" style={{ color: \"lightgray\" }}>\r\n              {props.strainDescription}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport ExpDetailsModal from \"../../components/modals/ExpDetailsModal\";\r\nimport {\r\n  setUser,\r\n  fetchAllStrains,\r\n  fetchUserSearchResults,\r\n  fetchEffects,\r\n  fetchFlavors,\r\n  fetchDescription,\r\n} from \"../../redux/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    userSearchResults: state.userSearchResults,\r\n    allStrains: state.allStrains,\r\n    searchParams: state.searchParams,\r\n    effects: state.effects,\r\n    flavors: state.flavors,\r\n    posPrefs: state.posPrefs,\r\n    avoidPrefs: state.avoidPrefs,\r\n    medPrefs: state.medPrefs,\r\n    flavPrefs: state.flavPrefs,\r\n    speciesPrefs: state.speciesPrefs,\r\n    strainDescription: state.strainDescription,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setUser: (username) => dispatch(setUser(username)),\r\n    fetchAllStrains: () => dispatch(fetchAllStrains()),\r\n    fetchUserSearchResults: (input) => dispatch(fetchUserSearchResults(input)),\r\n    fetchEffects: (input) => dispatch(fetchEffects(input)),\r\n    fetchFlavors: (input) => dispatch(fetchFlavors(input)),\r\n    fetchDescription: (input) => dispatch(fetchDescription(input)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpDetailsModal);\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Grid,\r\n  Typography,\r\n  Container,\r\n  CssBaseline,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ViewPreTokeModal from \"../../containers/modals/ViewPreTokeModal\";\r\nimport SnackbarAddFav from \"../../containers/modals/SnackbarAddFav\";\r\nimport RecordReview from \"../../containers/forms/RecordReview\";\r\nimport ViewReviewModal from \"../../containers/modals/ViewReviewModal\";\r\nimport ExpDetailsModal from \"../../containers/modals/ExpDetailsModal\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icon: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  heroContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  cardGrid: {\r\n    marginTop: 10,\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  cardMedia: {\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(6),\r\n  },\r\n  info: {\r\n    backgroundImage: \"url(./../experience.jpg)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n    minHeight: \"500px\",\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n  cardStrainName: {\r\n    \"&:hover\": {\r\n      color: \"springgreen\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Experience(props) {\r\n  const classes = useStyles();\r\n  const [showDetailsModal, setDetailsModal] = React.useState(false);\r\n  const [showViewPreTokeModal, setViewPreTokeModal] = React.useState(false);\r\n  const [showAddReviewForm, setAddReviewForm] = React.useState(false);\r\n  const [showViewReviewModal, setViewReviewModal] = React.useState(false);\r\n  const [strainID, setID] = React.useState(null);\r\n  const [strainName, setStrainName] = React.useState(null);\r\n\r\n  React.useEffect(() => {\r\n    props.fetchAllStrains();\r\n  }, []);\r\n\r\n  const handleDetailsModal = (e) => {\r\n    setID(e.currentTarget.id);\r\n    const strain = Object.entries(props.allStrains).find(\r\n      (strain) => strain[1].id == e.currentTarget.id\r\n    );\r\n    setStrainName(strain[0]);\r\n    setDetailsModal(true);\r\n  };\r\n\r\n  const handlePreLogModal = (e) => {\r\n    setID(e.currentTarget.id);\r\n    setViewPreTokeModal(true);\r\n  };\r\n\r\n  const handleOpenReview = (e) => {\r\n    const id = e.currentTarget.id;\r\n    setID(id);\r\n    let existingReview = props.reviews.find((review) => review.strainId == id);\r\n    existingReview ? setViewReviewModal(true) : setAddReviewForm(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <Container className={classes.cardGrid} maxWidth=\"md\" m={5}>\r\n        <SnackbarAddFav sID={strainID} />\r\n        {showDetailsModal && (\r\n          <ExpDetailsModal\r\n            setDetailsModal={setDetailsModal}\r\n            sID={strainID}\r\n            strainName={strainName}\r\n            setModal={setDetailsModal}\r\n          />\r\n        )}\r\n        {showViewPreTokeModal && (\r\n          <ViewPreTokeModal\r\n            setViewPreTokeModal={setViewPreTokeModal}\r\n            sID={strainID}\r\n          />\r\n        )}\r\n        {showAddReviewForm && (\r\n          <RecordReview setAddReviewForm={setAddReviewForm} sID={strainID} />\r\n        )}\r\n        {showViewReviewModal && (\r\n          <ViewReviewModal\r\n            setViewReviewModal={setViewReviewModal}\r\n            sID={strainID}\r\n          />\r\n        )}\r\n        {props.preLogs.length === 0 && (\r\n          <div className={classes.info}>\r\n            <Typography style={{ color: \"white\" }} variant=\"h4\">\r\n              Click The Bong On A <br /> Strain Card To Log An Experience!\r\n            </Typography>\r\n          </div>\r\n        )}\r\n        <Grid container spacing={4}>\r\n          {props.preLogs.map((card) => (\r\n            <Grid item key={card.strainId} xs={12} sm={6} md={4}>\r\n              <Card className={classes.card}>\r\n                <CardMedia\r\n                  className={classes.cardMedia}\r\n                  image={\r\n                    card.strainSpecies === \"sativa\"\r\n                      ? \"./../smoking_the_butterflies.jpg\"\r\n                      : card.strainSpecies === \"indica\"\r\n                      ? \"./../spaceman.jpg\"\r\n                      : \"./../hybrid_zebra.jpg\"\r\n                  }\r\n                  title=\"species\"\r\n                />\r\n                <CardContent className={classes.cardContent}>\r\n                  <Grid container>\r\n                    <Grid item xs={10}>\r\n                      <Typography\r\n                        className=\"doodoo\"\r\n                        variant=\"h4\"\r\n                        id={card.strainId}\r\n                        style={{\r\n                          color:\r\n                            card.strainSpecies === \"sativa\"\r\n                              ? \"gold\"\r\n                              : card.strainSpecies === \"indica\"\r\n                              ? \"orchid\"\r\n                              : \"indianred\",\r\n                          \"&:hover\": { color: \"springgreen\" },\r\n                        }}\r\n                      >\r\n                        {card.strainName}\r\n                        <hr />\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Typography\r\n                      variant=\"h5\"\r\n                      id={card.strainId}\r\n                      onClick={(e) => handleDetailsModal(e)}\r\n                    >\r\n                      <FontAwesomeIcon\r\n                        className=\"info-icon\"\r\n                        icon={faInfoCircle}\r\n                        style={{ cursor: \"pointer\" }}\r\n                        size=\"2x\"\r\n                      />\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Typography variant=\"h5\" component=\"h5\">\r\n                    {card.preWhen}\r\n                  </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    onClick={(e) => handlePreLogModal(e)}\r\n                    id={card.strainId}\r\n                  >\r\n                    <Typography style={{ fontWeight: 500 }}>\r\n                      pre-toke\r\n                    </Typography>\r\n                  </Button>\r\n                  <Button\r\n                    size=\"small\"\r\n                    color=\"secondary\"\r\n                    variant=\"contained\"\r\n                    id={card.strainId}\r\n                    onClick={(e) => handleOpenReview(e)}\r\n                  >\r\n                    <Typography style={{ fontWeight: 600 }}>review</Typography>\r\n                  </Button>\r\n                </CardActions>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport Experience from \"../../components/cards/ExperienceCards\";\r\nimport {\r\n  setUser,\r\n  fetchAllStrains,\r\n  fetchUserSearchResults,\r\n  setSpeciesPrefs,\r\n  fetchDescription,\r\n  fetchEffects,\r\n  fetchFlavors,\r\n  setUserSearchInput,\r\n  addFavorite,\r\n  toggleSnackbar,\r\n  setPerfectStrainResults,\r\n  setTitle,\r\n} from \"../../redux/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    userSearchResults: state.userSearchResults,\r\n    allStrains: state.allStrains,\r\n    searchParams: state.searchParams,\r\n    userSearchInput: state.userSearchInput,\r\n    effects: state.effects,\r\n    posPrefs: state.posPrefs,\r\n    avoidPrefs: state.avoidPrefs,\r\n    medPrefs: state.medPrefs,\r\n    flavPrefs: state.flavPrefs,\r\n    speciesPrefs: state.speciesPrefs,\r\n    favorites: state.favorites,\r\n    toggleSnackbar: state.toggleSnackbar,\r\n    perfectStrainResults: state.perfectStrainResults,\r\n    experiences: state.experiences,\r\n    preLogs: state.preLogs,\r\n    reviews: state.reviews,\r\n    favStrainObj: state.favStrainObj,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setUser: (username) => dispatch(setUser(username)),\r\n    fetchAllStrains: () => dispatch(fetchAllStrains()),\r\n    fetchUserSearchResults: (input) => dispatch(fetchUserSearchResults(input)),\r\n    setUserSearchInput: (input) => dispatch(setUserSearchInput(input)),\r\n    setSpeciesPrefs: (input) => dispatch(setSpeciesPrefs(input)),\r\n    fetchDescription: (input) => dispatch(fetchDescription(input)),\r\n    fetchEffects: (input) => dispatch(fetchEffects(input)),\r\n    fetchFlavors: (input) => dispatch(fetchFlavors(input)),\r\n    addFavorite: (input) => dispatch(addFavorite(input)),\r\n    setTitle: (input) => dispatch(setTitle(input)),\r\n    toggleSnackbar: (input) => dispatch(toggleSnackbar(input)),\r\n    setPerfectStrainResults: (results) =>\r\n      dispatch(setPerfectStrainResults(results)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Experience);\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router\";\r\n// import cookie from \"cookie\";\r\nimport LogIn from \"./containers/forms/LogIn\";\r\n// import RecordPreLog from \"./containers/forms/RecordPreLog\";\r\nimport UserSearchResults from \"./containers/UserSearchResults\";\r\n// import PerfectStrainCards from \"./containers/cards/PerfectStrainCards\";\r\nimport Home from \"./containers/Home\";\r\nimport FavStrainsCards from \"./containers/cards/FavStrainsCards\";\r\nimport SignUp from \"./containers/forms/SignUp\";\r\nimport Experience from \"./containers/cards/ExperienceCards\";\r\n\r\n// const checkAuth = (props) => {\r\n//   const cookies = cookie.parse(document.cookie);\r\n//   return cookies[\"loggedIn\"] ? true : false;\r\n//   // return cookies[\"token\"] === props.token ? true : false;\r\n// };\r\n\r\n// const ProtectedRoute = ({ component: Component, ...rest }) => {\r\n//   return (\r\n//     <Route\r\n//       {...rest}\r\n//       render={(props) =>\r\n//         checkAuth() ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n//       }\r\n//     />\r\n//   );\r\n// };\r\n\r\nconst Router = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route path=\"/login\" component={LogIn} />\r\n      <Route path=\"/signup\" component={SignUp} />\r\n      <Route path=\"/search\" component={UserSearchResults} />\r\n      <Route path=\"/favorites\" component={FavStrainsCards} />\r\n      <Route path=\"/experience\" component={Experience} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Router;\r\n","import { combineReducers } from \"redux\";\r\n\r\nconst user = (state = \"\", action) => {\r\n  switch (action.type) {\r\n    case \"USER\":\r\n      return action.value;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst bearerToken = (state = \"\", action) => {\r\n  switch (action.type) {\r\n    case \"BEARER_TOKEN\":\r\n      return action.value;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst checkUser = (state = \"\", action) => {\r\n  switch (action.type) {\r\n    case \"AUTH_LOGIN\":\r\n      return action.value;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst preTokeForm = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"SET_PRE_TOKE\":\r\n      return Object.assign({}, state, action.value);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst reviewForm = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"SET_REVIEW\":\r\n      return Object.assign({}, state, action.value);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst profile = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"SET_PROFILE\":\r\n      return Object.assign({}, state, action.value);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst experiences = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_PRE_EXP\":\r\n      let newPreExpState = Object.assign({}, state, action.value);\r\n      newPreExpState.preLogs = [...newPreExpState.preLogs, action.value];\r\n      return newPreExpState;\r\n    case \"ADD_REVIEW\":\r\n      let newReviewState = Object.assign({}, state, action.value);\r\n      newReviewState.reviews = [...newReviewState.reviews, action.value];\r\n      return newReviewState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst preLogs = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"ADD_PRE_EXP\":\r\n      return [...state, action.value];\r\n    case \"ADD_PRE_EXPS\":\r\n      let newState = [...state, action.value];\r\n      return newState.flat();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst reviews = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"ADD_REVIEW\":\r\n      return [...state, action.value];\r\n    case \"ADD_REVIEWS\":\r\n      let newState = [...state, action.value];\r\n      return newState.flat();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst title = (state = \"\", action) => {\r\n  switch (action.type) {\r\n    case \"SET_TITLE\":\r\n      return action.value;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst favorites = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"ADD_FAVORITE\":\r\n      return [...state, action.value];\r\n    case \"REMOVE_FAVORITE\":\r\n      return [...state.filter((x) => x.strainId !== action.value)];\r\n    case \"ADD_FAVORITES\":\r\n      let newState = [...state, action.value];\r\n      return newState.flat();\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst userPrefsObj = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"SET_USER_PREFS\":\r\n      return Object.assign({}, state, action.value);\r\n    case \"POPULATE_USER_PREFS\":\r\n      return Object.assign({}, state, action.value);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst favStrainObj = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"SET_FAV\":\r\n      return Object.assign({}, state, action.value);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst drawerOpen = (state = false, action) => {\r\n  switch (action.type) {\r\n    case \"DRAWER_OPEN\":\r\n      return action.value;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst snackbarOpen = (state = false, action) => {\r\n  switch (action.type) {\r\n    case \"SNACKBAR_OPEN\":\r\n      return action.value;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst findPerfectStrainModalOpen = (state = false, action) => {\r\n  switch (action.type) {\r\n    case \"FIND_PERFECT_STRAIN_MODAL_OPEN\":\r\n      return action.value;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst isLoading = (state = false, action) => {\r\n  switch (action.type) {\r\n    case \"IS_LOADING\":\r\n      return action.value;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst allStrains = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"ALL_STRAINS\":\r\n      return action.value;\r\n    case \"RESET_RESULTS\":\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst perfectStrainResults = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"SET_PERFECT_STRAIN_RESULTS\":\r\n      return action.value;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst userSearchResults = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"USER_SEARCH_RESULTS\":\r\n      return action.value;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst effects = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"EFFECTS\":\r\n      return action.value;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst flavors = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"FLAVORS\":\r\n      return action.value;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst searchParams = (state = \"\", action) => {\r\n  switch (action.type) {\r\n    case \"SEARCH_PARAMS\":\r\n      return action.value;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst userSearchInput = (state = \"\", action) => {\r\n  switch (action.type) {\r\n    case \"USER_INPUT\":\r\n      return action.value;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst posPrefs = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"POS_PREFS\":\r\n      return action.value;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst avoidPrefs = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"AVOID_PREFS\":\r\n      return action.value;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst medPrefs = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"MED_PREFS\":\r\n      return action.value;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst flavPrefs = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"FLAV_PREFS\":\r\n      return action.value;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst speciesPrefs = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"SPECIES_PREFS\":\r\n      return action.value;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst strainDescription = (state = \"\", action) => {\r\n  switch (action.type) {\r\n    case \"STRAIN_DESCRIPTION\":\r\n      return action.value;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  user,\r\n  allStrains,\r\n  userSearchResults,\r\n  effects,\r\n  flavors,\r\n  searchParams,\r\n  userSearchInput,\r\n  posPrefs,\r\n  avoidPrefs,\r\n  medPrefs,\r\n  flavPrefs,\r\n  speciesPrefs,\r\n  strainDescription,\r\n  drawerOpen,\r\n  findPerfectStrainModalOpen,\r\n  favorites,\r\n  snackbarOpen,\r\n  perfectStrainResults,\r\n  title,\r\n  preTokeForm,\r\n  experiences,\r\n  profile,\r\n  reviewForm,\r\n  isLoading,\r\n  bearerToken,\r\n  checkUser,\r\n  preLogs,\r\n  reviews,\r\n  favStrainObj,\r\n  userPrefsObj,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducers from \"./reducers\";\r\nimport state from \"./state\";\r\n\r\nexport default createStore(reducers, state, applyMiddleware(thunk));\r\n","export default {\r\n  user: \"\",\r\n  checkUser: \"\",\r\n  bearerToken: \"\",\r\n  profile: {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    email: \"\",\r\n  },\r\n  favStrainObj: {\r\n    username: \"\",\r\n    strainId: \"\",\r\n    strainName: \"\",\r\n    strainSpecies: \"\",\r\n  },\r\n  favorites: [],\r\n  preLogs: [],\r\n  reviews: [],\r\n  experiences: {\r\n    preLogs: [],\r\n    reviews: [],\r\n  },\r\n  title: \"\",\r\n  preTokeForm: {\r\n    username: \"\",\r\n    strainId: \"\",\r\n    strainName: \"\",\r\n    strainSpecies: \"\",\r\n    preWhen: \"\",\r\n    preMood: \"\",\r\n    sessionPurpose: \"\",\r\n    expectToAchieve: \"\",\r\n    lingeringWorries: \"\",\r\n    goal: \"\",\r\n    alreadyDone: \"\",\r\n    todo: \"\",\r\n  },\r\n  reviewForm: {\r\n    username: \"\",\r\n    session_id: 0,\r\n    strainId: \"\",\r\n    strainName: \"\",\r\n    strainSpecies: \"\",\r\n    budDescript: \"\",\r\n    goodFor: \"\",\r\n    transformedMood: \"\",\r\n    transformedExpectations: \"\",\r\n    experience: \"\",\r\n    transformedWorries: \"\",\r\n    transformedGoals: \"\",\r\n    disappointments: \"\",\r\n    wouldChangeNextTime: \"\",\r\n    wouldRecommend: null,\r\n  },\r\n  drawerOpen: false,\r\n  snackbarOpen: false,\r\n  findPerfectStrainModalOpen: false,\r\n  isLoading: false,\r\n  allStrains: {},\r\n  perfectStrainResults: [],\r\n  searchParams: \"\",\r\n  userSearchInput: \"\",\r\n  userSearchResults: [],\r\n  effects: {\r\n    positive: [],\r\n    negative: [],\r\n    medical: [],\r\n  },\r\n  flavors: [],\r\n  strainDescription: \"\",\r\n  userPrefsObj: {\r\n    speciesPrefs: [],\r\n    posPrefs: [],\r\n    avoidPrefs: [],\r\n    medPrefs: [],\r\n    flavPrefs: [],\r\n  },\r\n  speciesPrefs: [],\r\n  posPrefs: [],\r\n  avoidPrefs: [],\r\n  medPrefs: [],\r\n  flavPrefs: [],\r\n};\r\n","import React from \"react\";\r\n// import axios from \"axios\";\r\n// import cookie from \"cookie\";\r\n// import { useLocation } from \"react-router-dom\";\r\nimport { InputBase } from \"@material-ui/core\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n// import ListStrains from \"./ListStrains\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\",\r\n    },\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(1),\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"20ch\",\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: \"flex\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function SearchBar(props) {\r\n  const [redirect, setRedirect] = React.useState(null);\r\n\r\n  React.useEffect(() => {\r\n    setRedirect(null);\r\n  });\r\n\r\n  const classes = useStyles();\r\n  // const [input, setInput] = React.useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    props.setUserSearchInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.fetchUserSearchResults(props.userSearchInput);\r\n    props.setUserSearchInput(\"\");\r\n    setRedirect(true);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <form onSubmit={(e) => handleSubmit(e)}>\r\n        <InputBase\r\n          placeholder=\"Search All Strains…\"\r\n          classes={{\r\n            root: classes.inputRoot,\r\n            input: classes.inputInput,\r\n          }}\r\n          inputProps={{ \"aria-label\": \"search\" }}\r\n          onChange={(e) => handleChange(e)}\r\n          value={props.userSearchInput}\r\n        />\r\n      </form>\r\n      {redirect && <Redirect to=\"/search\" />}\r\n    </div>\r\n  );\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport SearchBar from \"../../components/navigation/SearchBar\";\r\nimport {\r\n  setUser,\r\n  fetchAllStrains,\r\n  fetchUserSearchResults,\r\n  setUserSearchInput,\r\n} from \"../../redux/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    userSearchResults: state.userSearchResults,\r\n    allStrains: state.allStrains,\r\n    searchParams: state.searchParams,\r\n    userSearchInput: state.userSearchInput,\r\n    effects: state.effects,\r\n    posPrefs: state.posPrefs,\r\n    avoidPrefs: state.avoidPrefs,\r\n    medPrefs: state.medPrefs,\r\n    flavPrefs: state.flavPrefs,\r\n    speciesPrefs: state.speciesPrefs,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setUser: (username) => dispatch(setUser(username)),\r\n    fetchAllStrains: () => dispatch(fetchAllStrains()),\r\n    fetchUserSearchResults: (input) => dispatch(fetchUserSearchResults(input)),\r\n    setUserSearchInput: (input) => dispatch(setUserSearchInput(input)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar);\r\n","import React from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n// import cookie from \"cookie\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCannabis } from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Typography,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SearchBar from \"../../containers/navigation/SearchBar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    color: \"lightgray\",\r\n    \"&:hover\": { color: \"#FFA726\" },\r\n    marginRight: theme.spacing(0),\r\n  },\r\n  title: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\",\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: \"flex\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  signUp: {\r\n    backgroundColor: theme.palette.info.main,\r\n  },\r\n}));\r\n\r\nconst Navigation = (props) => {\r\n  const classes = useStyles();\r\n  // const cookies = cookie.parse(document.cookie);\r\n  const location = useLocation();\r\n\r\n  const SignIn = () => {\r\n    return (\r\n      <Link style={{ textDecoration: \"none\" }} to=\"/login\">\r\n        <Button variant=\"contained\" color=\"secondary\">\r\n          <Typography\r\n            style={{\r\n              fontWeight: 600,\r\n              color: \"green\",\r\n              textShadow: \"1px 1px yellowgreen\",\r\n            }}\r\n          >\r\n            Sign In\r\n          </Typography>\r\n        </Button>\r\n      </Link>\r\n    );\r\n  };\r\n\r\n  const SignUp = () => {\r\n    return (\r\n      <Link\r\n        to=\"/signup\"\r\n        style={{\r\n          textDecoration: \"none\",\r\n          fontWeight: \"600\",\r\n          color: \"black\",\r\n        }}\r\n      >\r\n        <Button variant=\"contained\" color=\"secondary\">\r\n          <Typography\r\n            style={{\r\n              fontWeight: 600,\r\n              color: \"green\",\r\n              textShadow: \"1px 1px yellowgreen\",\r\n            }}\r\n          >\r\n            Sign Up\r\n          </Typography>\r\n        </Button>\r\n      </Link>\r\n    );\r\n  };\r\n\r\n  const SignOut = () => {\r\n    return (\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        style={{\r\n          fontWeight: 600,\r\n          color: \"green\",\r\n          textShadow: \"1px 1px yellowgreen\",\r\n        }}\r\n        className=\"nav-list-item\"\r\n        onClick={() => {\r\n          document.cookie = \"loggedIn=\";\r\n          document.cookie = \"token=\";\r\n          window.location.replace(\"/login\");\r\n        }}\r\n      >\r\n        <Typography>Sign Out</Typography>\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AppBar title=\"Higher Intentions\" position=\"fixed\" color=\"primary\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={() => props.toggleDrawer(!props.drawerOpen)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <SearchBar />\r\n          <Typography variant=\"h6\" style={{ color: \"white\" }}>\r\n            <Link to=\"/\">\r\n              <FontAwesomeIcon\r\n                edge=\"start\"\r\n                className={classes.menuButton}\r\n                icon={faCannabis}\r\n                aria-label=\"open drawer\"\r\n                style={{ cursor: \"pointer\", marginRight: 1 }}\r\n                size=\"2x\"\r\n              />\r\n            </Link>\r\n          </Typography>\r\n          <Typography style={{ fontWeight: 500, color: \"#FFA726\" }}>\r\n            {location.pathname === \"/experience\"\r\n              ? `Experience Archives`\r\n              : location.pathname === \"/search\"\r\n              ? `Search All Strains`\r\n              : location.pathname === \"/favorites\"\r\n              ? `Favorite Strains`\r\n              : `Higher Intentions`}\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}></div>\r\n          <ul className=\"nav-list\">\r\n            {props.user && (\r\n              <Typography>\r\n                <span>\r\n                  Welcome, <span style={{ color: \"orange\" }}>{props.user}</span>\r\n                  !\r\n                </span>\r\n              </Typography>\r\n            )}\r\n            {props.user && <SignOut />}\r\n            {!props.user &&\r\n              location.pathname !== \"/login\" &&\r\n              location.pathname !== \"/signup\" && <SignIn />}\r\n            {!props.user && location.pathname === \"/login\" && <SignUp />}\r\n          </ul>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import { connect } from \"react-redux\";\r\nimport Navigation from \"../../components/navigation/Navigation\";\r\nimport { toggleDrawer } from \"../../redux/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    drawerOpen: state.drawerOpen,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    toggleDrawer: (input) => dispatch(toggleDrawer(input)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation);\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Drawer,\r\n  List,\r\n  Divider,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport LocalLibraryIcon from \"@material-ui/icons/LocalLibrary\";\r\nimport GpsFixedIcon from \"@material-ui/icons/GpsFixed\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: \"auto\",\r\n  },\r\n});\r\n\r\nexport default function NavDrawer(props) {\r\n  const classes = useStyles();\r\n  const [redirect, setRedirect] = React.useState(null);\r\n\r\n  React.useEffect(() => {\r\n    setRedirect(null);\r\n  });\r\n\r\n  const toggleDrawer = (toggle) => (event) => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n    props.toggleDrawer(toggle);\r\n  };\r\n\r\n  const handleRedirect = (link) => {\r\n    setRedirect(link);\r\n  };\r\n\r\n  const handleFindPerfect = () => {\r\n    props.setPerfectStrainResults([]);\r\n    setRedirect(\"/\");\r\n    props.toggleFindPerfectStrain(true);\r\n  };\r\n\r\n  const list = () => (\r\n    <div\r\n      className={classes.list}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(!props.drawerOpen)}\r\n      onKeyDown={toggleDrawer(!props.drawerOpen)}\r\n    >\r\n      <List>\r\n        <ListItem onClick={() => handleRedirect(\"/\")} button key=\"home\">\r\n          <ListItemIcon>\r\n            <HomeIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Home\" />\r\n        </ListItem>\r\n        <ListItem\r\n          onClick={() => handleFindPerfect()}\r\n          button\r\n          key=\"perfectStrain\"\r\n        >\r\n          <ListItemIcon>\r\n            <GpsFixedIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Find Perfect Strain\" />\r\n        </ListItem>\r\n        <ListItem\r\n          onClick={() => handleRedirect(\"/favorites\")}\r\n          button\r\n          key=\"favorites\"\r\n        >\r\n          <ListItemIcon>\r\n            <FavoriteIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Favorites\" />\r\n        </ListItem>\r\n        <ListItem\r\n          onClick={() => handleRedirect(\"/experience\")}\r\n          button\r\n          key=\"experience\"\r\n        >\r\n          <ListItemIcon>\r\n            <LocalLibraryIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Experience\" />\r\n        </ListItem>\r\n        <Divider />\r\n        <List>\r\n          <ListItem onClick={handleRedirect} button key=\"account\">\r\n            <ListItemIcon>\r\n              <AccountCircleIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Account\" />\r\n          </ListItem>\r\n        </List>\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <React.Fragment key=\"left\">\r\n      {redirect && <Redirect to={redirect} />}\r\n      <Drawer\r\n        anchor=\"left\"\r\n        open={props.drawerOpen}\r\n        onClose={toggleDrawer(!props.drawerOpen)}\r\n      >\r\n        {list(\"left\")}\r\n      </Drawer>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport NavDrawer from \"../../components/navigation/NavDrawer\";\r\nimport {\r\n  toggleDrawer,\r\n  toggleFindPerfectStrain,\r\n  toggleLoading,\r\n  setPerfectStrainResults,\r\n} from \"../../redux/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    drawerOpen: state.drawerOpen,\r\n    findPerfectStrainOpen: state.findPerfectStrainOpen,\r\n    isLoading: state.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    toggleDrawer: (input) => dispatch(toggleDrawer(input)),\r\n    toggleFindPerfectStrain: (input) =>\r\n      dispatch(toggleFindPerfectStrain(input)),\r\n    toggleLoading: (input) => dispatch(toggleLoading(input)),\r\n    setPerfectStrainResults: (results) =>\r\n      dispatch(setPerfectStrainResults(results)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavDrawer);\r\n","import React from \"react\";\r\n// import clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n// import ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Select from \"@material-ui/core/Select\";\r\n// import Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n    // maxWidth: 300,\r\n    display: 'flex',\r\n    wrap: 'nowrap',\r\n  },\r\n  chips: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n  },\r\n  // noLabel: {\r\n  //   marginTop: theme.spacing(3),\r\n  // },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst posEffects = [\r\n  \"Hungry\",\r\n  \"Euphoric\",\r\n  \"Happy\",\r\n  \"Creative\",\r\n  \"Energetic\",\r\n  \"Talkative\",\r\n  \"Uplifted\",\r\n  \"Tingly\",\r\n  \"Sleepy\",\r\n  \"Focused\",\r\n  \"Giggly\",\r\n  \"Aroused\",\r\n];\r\n\r\nfunction getStyles(pref, posPrefs, theme) {\r\n  return {\r\n    fontWeight:\r\n      posPrefs.indexOf(pref) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\n\r\nexport default function PosEffectsChips(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  // const [posPrefs, setPosPrefs] = React.useState([]);\r\n\r\n  const handleChange = (event) => {\r\n    props.setPosPrefs(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"posEffects-chips-label\">Which Of The Following Sound Beneficial (Select Up To Five):</InputLabel>\r\n        <Select\r\n          labelId=\"posEffects-chips-label\"\r\n          id=\"posEffects-chips\"\r\n          multiple\r\n          fullWidth\r\n          value={props.posPrefs}\r\n          onChange={handleChange}\r\n          input={<Input id=\"select-multiple-chip\" />}\r\n          renderValue={(selected) => (\r\n            <div className={classes.chips}>\r\n              {selected.map((value) => (\r\n                <Chip key={value} label={value} className={classes.chip} />\r\n              ))}\r\n            </div>\r\n          )}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {posEffects.sort().map((effect) => (\r\n            <MenuItem\r\n              key={effect}\r\n              value={effect}\r\n              style={getStyles(effect, props.posPrefs, theme)}\r\n            >\r\n              {effect}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport PosEffectsChips from \"../../../components/forms/chips/PosEffectsChips\";\r\nimport { setPosPrefs } from \"../../../redux/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posPrefs: state.posPrefs,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setPosPrefs: (input) => dispatch(setPosPrefs(input)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PosEffectsChips);\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n    // maxWidth: 300,\r\n    display: 'flex',\r\n    wrap: 'nowrap',\r\n  },\r\n  chips: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n  },\r\n  // noLabel: {\r\n  //   marginTop: theme.spacing(3),\r\n  // },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst negEffects = [\"Dizzy\", \"Dry Mouth\", \"Paranoid\", \"Dry Eyes\", \"Anxious\"];\r\n\r\nfunction getStyles(pref, avoidPrefs, theme) {\r\n  return {\r\n    fontWeight:\r\n      avoidPrefs.indexOf(pref) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\n\r\nexport default function NegEffectsChips(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  // const [negPrefs, setNegPrefs] = React.useState([]);\r\n\r\n  const handleChange = (event) => {\r\n    props.setAvoidPrefs(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"negEffects-chips-label\">Select Any Intolerable Side Effects:</InputLabel>\r\n        <Select\r\n          labelId=\"negEffects-chips-label\"\r\n          id=\"negEffects-chips\"\r\n          multiple\r\n          value={props.avoidPrefs}\r\n          onChange={handleChange}\r\n          input={<Input id=\"select-negEffects-chip\" />}\r\n          renderValue={(selected) => (\r\n            <div className={classes.chips}>\r\n              {selected.map((value) => (\r\n                <Chip key={value} label={value} className={classes.chip} />\r\n              ))}\r\n            </div>\r\n          )}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {negEffects.sort().map((effect) => (\r\n            <MenuItem\r\n              key={effect}\r\n              value={effect}\r\n              style={getStyles(effect, props.avoidPrefs, theme)}\r\n            >\r\n              {effect}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport NegEffectsChips from \"../../../components/forms/chips/NegEffectsChips\";\r\nimport { setAvoidPrefs } from \"../../../redux/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    avoidPrefs: state.avoidPrefs,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setAvoidPrefs: (input) => dispatch(setAvoidPrefs(input)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NegEffectsChips);\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n    // maxWidth: 300,\r\n    display: 'flex',\r\n    wrap: 'nowrap',\r\n  },\r\n  chips: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n  },\r\n  // noLabel: {\r\n  //   marginTop: theme.spacing(3),\r\n  // },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst medicinal = [\r\n  \"Depression\",\r\n  \"Insomnia\",\r\n  \"Pain\",\r\n  \"Stress\",\r\n  \"Cramps\",\r\n  \"Lack Of Appetite\",\r\n  \"Nausea\",\r\n  \"Headache\",\r\n  \"Fatigue\",\r\n  \"Headaches\",\r\n  \"Eye Pressure\",\r\n  \"Inflammation\",\r\n  \"Spasticity\",\r\n  \"Seizures\",\r\n  \"Muscle Spasms\",\r\n];\r\n\r\nfunction getStyles(pref, medPrefs, theme) {\r\n  return {\r\n    fontWeight:\r\n      medPrefs.indexOf(pref) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\n\r\nexport default function MedicinalChips(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  // const [medPrefs, setMedPrefs] = React.useState([]);\r\n\r\n  const handleChange = (event) => {\r\n    props.setMedPrefs(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"medicinal-chips-label\">Do You Wish To Treat Any Of The Following:</InputLabel>\r\n        <Select\r\n          labelId=\"medicinal-chips-label\"\r\n          id=\"medicinal-chips\"\r\n          multiple\r\n          value={props.medPrefs}\r\n          onChange={handleChange}\r\n          input={<Input id=\"select-multiple-chip\" />}\r\n          renderValue={(selected) => (\r\n            <div className={classes.chips}>\r\n              {selected.map((value) => (\r\n                <Chip key={value} label={value} className={classes.chip} />\r\n              ))}\r\n            </div>\r\n          )}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {medicinal.sort().map((effect) => (\r\n            <MenuItem\r\n              key={effect}\r\n              value={effect}\r\n              style={getStyles(effect, props.medPrefs, theme)}\r\n            >\r\n              {effect}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport MedicinalChips from \"../../../components/forms/chips/MedicinalChips\";\r\nimport { setMedPrefs } from \"../../../redux/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    medPrefs: state.medPrefs,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setMedPrefs: (input) => dispatch(setMedPrefs(input)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MedicinalChips);\r\n","import React from \"react\";\r\n// import clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n// import ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Select from \"@material-ui/core/Select\";\r\n// import Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n    // maxWidth: 300,\r\n    display: \"flex\",\r\n    wrap: \"nowrap\",\r\n    // fullWidth: true,\r\n  },\r\n  chips: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n  },\r\n  // noLabel: {\r\n  //   marginTop: theme.spacing(3),\r\n  // },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst flavors = [\r\n  \"Earthy\",\r\n  \"Chemical\",\r\n  \"Pine\",\r\n  \"Spicy/Herbal\",\r\n  \"Pungent\",\r\n  \"Pepper\",\r\n  \"Flowery\",\r\n  \"Citrus\",\r\n  \"Orange\",\r\n  \"Sweet\",\r\n  \"Skunk\",\r\n  \"Grape\",\r\n  \"Minty\",\r\n  \"Woody\",\r\n  \"Cheese\",\r\n  \"Diesel\",\r\n  \"Tropical\",\r\n  \"Grapefruit\",\r\n  \"Nutty\",\r\n  \"Lemon\",\r\n  \"Berry\",\r\n  \"Blueberry\",\r\n  \"Ammonia\",\r\n  \"Apple\",\r\n  \"Rose\",\r\n  \"Butter\",\r\n  \"Honey\",\r\n  \"Tea\",\r\n  \"Lime\",\r\n  \"Lavender\",\r\n  \"Strawberry\",\r\n  \"Mint\",\r\n  \"Chestnut\",\r\n  \"Tree Fruit\",\r\n  \"Pear\",\r\n  \"Apricot\",\r\n  \"Peach\",\r\n  \"Blue Cheese\",\r\n  \"Menthol\",\r\n  \"Coffee\",\r\n  \"Tar\",\r\n  \"Mango\",\r\n  \"Pineapple\",\r\n  \"Sage\",\r\n  \"Vanilla\",\r\n  \"Plum\",\r\n  \"Tobacco\",\r\n  \"Violet\",\r\n];\r\n\r\nfunction getStyles(pref, flavorPref, theme) {\r\n  return {\r\n    fontWeight:\r\n      flavorPref.indexOf(pref) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\n\r\nexport default function FlavorChips(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  // const [flavPrefs, setFlavorPref] = React.useState([]);\r\n  // const error = [].filter((v) => v).length !== 2;\r\n  const handleChange = (event) => {\r\n    props.setFlavPrefs(event.target.value);\r\n  };\r\n\r\n  // const handleDelete = (value) => {\r\n  //   console.log(\"delete\");\r\n  //   props.setFlavPrefs(props.flavPrefs.filter((x) => x !== value));\r\n  // };\r\n\r\n  return (\r\n    <div>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"flavors-chips-label\">\r\n          Select One Or Two Enticing Aromas:{\" \"}\r\n        </InputLabel>\r\n        <Select\r\n          labelId=\"flavors-chips-label\"\r\n          id=\"flavors-chips\"\r\n          multiple\r\n          value={props.flavPrefs}\r\n          onChange={handleChange}\r\n          input={<Input id=\"select-multiple-chip\" />}\r\n          renderValue={(selected) => (\r\n            <div className={classes.chips}>\r\n              {selected.map((value) => (\r\n                <Chip key={value} label={value} className={classes.chip} />\r\n              ))}\r\n            </div>\r\n          )}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {flavors.sort().map((flavor) => (\r\n            <MenuItem\r\n              key={flavor}\r\n              value={flavor}\r\n              selected={flavor}\r\n              style={getStyles(flavor, props.flavPrefs, theme)}\r\n            >\r\n              {flavor}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport FlavorChips from \"../../../components/forms/chips/FlavorChips\";\r\nimport { setFlavPrefs } from \"../../../redux/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    flavPrefs: state.flavPrefs,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setFlavPrefs: (input) => dispatch(setFlavPrefs(input)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FlavorChips);\r\n","import React from \"react\";\r\n// import clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n// import ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Select from \"@material-ui/core/Select\";\r\n// import Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n    // maxWidth: 300,\r\n    display: 'flex',\r\n    wrap: 'nowrap',\r\n  },\r\n  chips: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n  },\r\n  // noLabel: {\r\n  //   marginTop: theme.spacing(3),\r\n  // },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst species = [\"sativa\", \"indica\", \"hybrid\"];\r\n\r\nfunction getStyles(pref, speciesPrefs, theme) {\r\n  return {\r\n    fontWeight:\r\n      speciesPrefs.indexOf(pref) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\n\r\nexport default function SpeciesPrefsChips(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  // const [posPrefs, setPosPrefs] = React.useState([]);\r\n\r\n  const handleChange = (event) => {\r\n    props.setSpeciesPrefs(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"posEffects-chips-label\">Do You Strongly Prefer Either Mental (sativa) Or Body (indica) Effects:</InputLabel>\r\n        <Select\r\n          labelId=\"posEffects-chips-label\"\r\n          id=\"posEffects-chips\"\r\n          multiple\r\n          fullWidth\r\n          value={props.speciesPrefs}\r\n          onChange={handleChange}\r\n          input={<Input id=\"select-multiple-chip\" />}\r\n          renderValue={(selected) => (\r\n            <div className={classes.chips}>\r\n              {selected.map((value) => (\r\n                <Chip key={value} label={value} className={classes.chip} />\r\n              ))}\r\n            </div>\r\n          )}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {species.map((species) => (\r\n            <MenuItem\r\n              key={species}\r\n              value={species}\r\n              style={getStyles(species, props.speciesPrefs, theme)}\r\n            >\r\n              {species}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport SpeciesPrefsChips from \"../../../components/forms/chips/SpeciesPrefsChips\";\r\nimport { setSpeciesPrefs } from \"../../../redux/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    speciesPrefs: state.speciesPrefs,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setSpeciesPrefs: (input) => dispatch(setSpeciesPrefs(input)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SpeciesPrefsChips);\r\n","import { connect } from \"react-redux\";\r\nimport FindPerfectStrain from \"../../components/modals/FindPerfectStrain\";\r\nimport {\r\n  setUser,\r\n  fetchAllStrains,\r\n  fetchUserSearchResults,\r\n  setSpeciesPrefs,\r\n  fetchDescription,\r\n  fetchEffects,\r\n  fetchFlavors,\r\n  setUserSearchInput,\r\n  setAvoidPrefs,\r\n  setMedPrefs,\r\n  setFlavPrefs,\r\n  setPosPrefs,\r\n  resetAllStrains,\r\n  toggleFindPerfectStrain,\r\n  setPerfectStrainResults,\r\n  toggleLoading,\r\n  setFavStrainObj,\r\n} from \"../../redux/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    userSearchResults: state.userSearchResults,\r\n    allStrains: state.allStrains,\r\n    searchParams: state.searchParams,\r\n    userSearchInput: state.userSearchInput,\r\n    effects: state.effects,\r\n    posPrefs: state.posPrefs,\r\n    avoidPrefs: state.avoidPrefs,\r\n    medPrefs: state.medPrefs,\r\n    flavPrefs: state.flavPrefs,\r\n    speciesPrefs: state.speciesPrefs,\r\n    findPerfectStrainModalOpen: state.findPerfectStrainModalOpen,\r\n    perfectStrainResults: state.perfectStrainResults,\r\n    isLoading: state.isLoading,\r\n    userPrefsObj: state.userPrefsObj,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setUser: (username) => dispatch(setUser(username)),\r\n    fetchAllStrains: () => dispatch(fetchAllStrains()),\r\n    fetchUserSearchResults: (input) => dispatch(fetchUserSearchResults(input)),\r\n    setAvoidPrefs: (input) => dispatch(setAvoidPrefs(input)),\r\n    setPosPrefs: (input) => dispatch(setPosPrefs(input)),\r\n    setMedPrefs: (input) => dispatch(setMedPrefs(input)),\r\n    setFlavPrefs: (input) => dispatch(setFlavPrefs(input)),\r\n    setSpeciesPrefs: (input) => dispatch(setSpeciesPrefs(input)),\r\n    setUserSearchInput: (input) => dispatch(setUserSearchInput(input)),\r\n    fetchDescription: (input) => dispatch(fetchDescription(input)),\r\n    fetchEffects: (input) => dispatch(fetchEffects(input)),\r\n    fetchFlavors: (input) => dispatch(fetchFlavors(input)),\r\n    resetAllStrains: (input) => dispatch(resetAllStrains(input)),\r\n    toggleFindPerfectStrain: (input) =>\r\n      dispatch(toggleFindPerfectStrain(input)),\r\n    setPerfectStrainResults: (results) =>\r\n      dispatch(setPerfectStrainResults(results)),\r\n    toggleLoading: (input) => dispatch(toggleLoading(input)),\r\n    setFavStrainObj: (prefsObj) => dispatch(setFavStrainObj(prefsObj)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FindPerfectStrain);\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  Typography,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  FormControl,\r\n} from \"@material-ui/core\";\r\nimport PosEffectsChips from \"../../containers/cards/chips/PosEffectsChips\";\r\nimport NegEffectsChips from \"../../containers/cards/chips/NegEffectsChips\";\r\nimport MedicinalChips from \"../../containers/cards/chips/MedicinalChips\";\r\nimport FlavorChips from \"../../containers/cards/chips/FlavorChips\";\r\nimport SpeciesPrefsChips from \"../../containers/cards/chips/SpeciesPrefsChips\";\r\n\r\nexport default function FindPerfectStrain(props) {\r\n  React.useEffect(() => {\r\n    props.fetchAllStrains();\r\n  }, []);\r\n\r\n  const handleClose = () => {\r\n    props.toggleFindPerfectStrain(false);\r\n  };\r\n\r\n  const getPerfectStrains = async () => {\r\n    props.toggleLoading(true);\r\n    await props.fetchAllStrains();\r\n    const perfectStrains = Object.entries(props.allStrains).filter(\r\n      (strain) =>\r\n        props.posPrefs.every((effect) =>\r\n          strain[1].effects.positive.includes(effect)\r\n        ) &&\r\n        props.medPrefs.every((effect) =>\r\n          strain[1].effects.medical.includes(effect)\r\n        ) &&\r\n        props.flavPrefs.every((effect) => strain[1].flavors.includes(effect)) &&\r\n        props.avoidPrefs.every(\r\n          (effect) => !strain[1].effects.negative.includes(effect)\r\n        ) &&\r\n        (props.speciesPrefs.length === 0 ||\r\n          props.speciesPrefs.includes(strain[1].race))\r\n    );\r\n    if (perfectStrains.length === 0) {\r\n      return props.setPerfectStrainResults([\r\n        [\"no results\", { \"id\": 9999, race: \"no results\" }],\r\n      ]);\r\n    } else if (perfectStrains.length > 25) {\r\n      return props.setPerfectStrainResults([\r\n        [\"too many results\", { \"id\": 10000, race: \"too many results\" }],\r\n      ]);\r\n    }\r\n    props.setPerfectStrainResults(perfectStrains);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    (props.posPrefs.length > 0 ||\r\n      props.avoidPrefs.length > 0 ||\r\n      props.medPrefs.length > 0 ||\r\n      props.flavPrefs.length > 0 ||\r\n      props.speciesPrefs.length > 0) &&\r\n      getPerfectStrains();\r\n\r\n    handleClose();\r\n  };\r\n\r\n  const handleReset = () => {\r\n    props.resetAllStrains({});\r\n    props.setPosPrefs([]);\r\n    props.setAvoidPrefs([]);\r\n    props.setMedPrefs([]);\r\n    props.setFlavPrefs([]);\r\n    props.setSpeciesPrefs([]);\r\n    props.fetchAllStrains();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        disableEscapeKeyDown\r\n        open={props.findPerfectStrainModalOpen}\r\n        onClose={handleClose}\r\n      >\r\n        <DialogTitle>\r\n          <Typography variant=\"h5\">What Are You Looking For?</Typography>\r\n          <hr />\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <form\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              width: \"420px\",\r\n            }}\r\n          >\r\n            <FormControl>\r\n              <PosEffectsChips />\r\n              <MedicinalChips />\r\n              <NegEffectsChips />\r\n              <SpeciesPrefsChips />\r\n              <FlavorChips />\r\n            </FormControl>\r\n          </form>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleReset} color=\"secondary\" variant=\"contained\">\r\n            <Typography style={{ fontWeight: 600 }}>Reset</Typography>\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\" variant=\"contained\">\r\n            <Typography> Cancel</Typography>\r\n          </Button>\r\n          <Button\r\n            onClick={() => handleSubmit()}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            <Typography>Ok</Typography>\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n// import Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#fff\",\r\n  },\r\n}));\r\n\r\nexport default function Loading(props) {\r\n  const classes = useStyles();\r\n  // const [open, setOpen] = React.useState(true);\r\n  props.perfectStrainResults.length > 0 && props.toggleLoading(false);\r\n\r\n  return (\r\n    <>\r\n      <Backdrop className={classes.backdrop} open={props.isLoading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n    </>\r\n  );\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport Loading from \"../../components/modals/Loading\";\r\nimport { toggleDrawer, toggleLoading } from \"../../redux/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    allStrains: state.allStrains,\r\n    perfectStrainResults: state.perfectStrainResults,\r\n    isLoading: state.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    toggleDrawer: (input) => dispatch(toggleDrawer(input)),\r\n    toggleLoading: (input) => dispatch(toggleLoading(input)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Loading);\r\n","import React from \"react\";\r\nimport Router from \"./Router\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core\";\r\nimport { orange } from \"@material-ui/core/colors\";\r\nimport Navigation from \"./containers/navigation/Navigation\";\r\nimport NavDrawer from \"./containers/navigation/NavDrawer\";\r\nimport FindPerfectStrain from \"./containers/modals/FindPerfectStrain\";\r\nimport Loading from \"./containers/modals/Loading\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#408F00\",\r\n    },\r\n    secondary: {\r\n      main: orange[400],\r\n    },\r\n\r\n    type: \"dark\",\r\n  },\r\n  typography: {\r\n    fontFamily: \"Acme, sans-serif\",\r\n  },\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <ThemeProvider theme={theme}>\r\n        <BrowserRouter>\r\n          <Navigation />\r\n          <NavDrawer />\r\n          <FindPerfectStrain />\r\n          <Loading />\r\n          <Router />\r\n        </BrowserRouter>\r\n      </ThemeProvider>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}